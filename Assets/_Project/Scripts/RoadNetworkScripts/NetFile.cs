//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Ahmad Mohammadi - Assistant Professor - Brock University Canada.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1181.0 using the following command:
// xscgen net_file.xsd additional_file.xsd tazTypes.xsd routeTypes.xsd baseTypes.xsd --namespace NetFile --output NetFile.cs
namespace NetFile
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("boolType", Namespace="")]
    public enum BoolType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("true")]
        True,
        
        [System.Xml.Serialization.XmlEnumAttribute("false")]
        False,
        
        [System.Xml.Serialization.XmlEnumAttribute("True")]
        True1,
        
        [System.Xml.Serialization.XmlEnumAttribute("False")]
        False1,
        
        [System.Xml.Serialization.XmlEnumAttribute("yes")]
        Yes,
        
        [System.Xml.Serialization.XmlEnumAttribute("no")]
        No,
        
        [System.Xml.Serialization.XmlEnumAttribute("on")]
        On,
        
        [System.Xml.Serialization.XmlEnumAttribute("off")]
        Off,
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        [System.Xml.Serialization.XmlEnumAttribute("x")]
        X,
        
        [System.Xml.Serialization.XmlEnumAttribute("-")]
        Empty,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("locationType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationType
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                              [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                              (,                                [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                              )?.</para>
        /// </summary>
        ////[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                              [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                              (,                                [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                              )?")]
        [System.Xml.Serialization.XmlAttributeAttribute("netOffset")]
        public string NetOffset { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern:                          [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                       .</para>
        /// </summary>
        ////[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                       ")]
        [System.Xml.Serialization.XmlAttributeAttribute("convBoundary")]
        public string ConvBoundary { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern:                          [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                       .</para>
        /// </summary>
        ////[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                       ")]
        [System.Xml.Serialization.XmlAttributeAttribute("origBoundary")]
        public string OrigBoundary { get; set; }
        
        ////
        [System.Xml.Serialization.XmlAttributeAttribute("projParameter")]
        public string ProjParameter { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tlLogicType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TlLogicType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<PhaseType> _phase;
        
        [System.Xml.Serialization.XmlElementAttribute("phase")]
        public System.Collections.ObjectModel.Collection<PhaseType> Phase
        {
            get
            {
                return _phase;
            }
            private set
            {
                _phase = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Phase collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhaseSpecified
        {
            get
            {
                return (this.Phase.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TlLogicType" /> class.</para>
        /// </summary>
        public TlLogicType()
        {
            this._phase = new System.Collections.ObjectModel.Collection<PhaseType>();
            this._param = new System.Collections.ObjectModel.Collection<ParamType>();
            this._condition = new System.Collections.ObjectModel.Collection<ConditionType>();
            this._assignment = new System.Collections.ObjectModel.Collection<AssignmentType>();
            this._function = new System.Collections.ObjectModel.Collection<FunctionType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConditionType> _condition;
        
        [System.Xml.Serialization.XmlElementAttribute("condition")]
        public System.Collections.ObjectModel.Collection<ConditionType> Condition
        {
            get
            {
                return _condition;
            }
            private set
            {
                _condition = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Condition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified
        {
            get
            {
                return (this.Condition.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AssignmentType> _assignment;
        
        [System.Xml.Serialization.XmlElementAttribute("assignment")]
        public System.Collections.ObjectModel.Collection<AssignmentType> Assignment
        {
            get
            {
                return _assignment;
            }
            private set
            {
                _assignment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Assignment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssignmentSpecified
        {
            get
            {
                return (this.Assignment.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FunctionType> _function;
        
        [System.Xml.Serialization.XmlElementAttribute("function")]
        public System.Collections.ObjectModel.Collection<FunctionType> Function
        {
            get
            {
                return _function;
            }
            private set
            {
                _function = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Function collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FunctionSpecified
        {
            get
            {
                return (this.Function.Count != 0);
            }
        }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public TlTypeType Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("programID")]
        public string ProgramId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("offset")]
        public string Offset { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("phaseType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhaseType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("duration")]
        public float Duration { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("minDur")]
        public string MinDur { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("maxDur")]
        public string MaxDur { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("earliestEnd")]
        public string EarliestEnd { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("latestEnd")]
        public string LatestEnd { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("earlyTarget")]
        public string EarlyTarget { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("finalTarget")]
        public string FinalTarget { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("yellow")]
        public float Yellow { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Yellow property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YellowSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("red")]
        public float Red { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Red property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("vehext")]
        public float Vehext { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Vehext property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VehextSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [ruyYgGoOs]+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[ruyYgGoOs]+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("state")]
        public string State { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: (\d+)( (\d+))*.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(\\d+)( (\\d+))*")]
        [System.Xml.Serialization.XmlAttributeAttribute("next")]
        public string Next { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("paramType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParamType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("key")]
        public string Key { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public string Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("conditionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConditionType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public string Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("assignmentType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignmentType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("check")]
        public string Check { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public string Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("functionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FunctionType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AssignmentType> _assignment;
        
        [System.Xml.Serialization.XmlElementAttribute("assignment")]
        public System.Collections.ObjectModel.Collection<AssignmentType> Assignment
        {
            get
            {
                return _assignment;
            }
            private set
            {
                _assignment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Assignment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssignmentSpecified
        {
            get
            {
                return (this.Assignment.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FunctionType" /> class.</para>
        /// </summary>
        public FunctionType()
        {
            this._assignment = new System.Collections.ObjectModel.Collection<AssignmentType>();
        }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("nArgs")]
        public int NArgs { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tlTypeType", Namespace="")]
    public enum TlTypeType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("actuated")]
        Actuated,
        
        [System.Xml.Serialization.XmlEnumAttribute("delay_based")]
        DelayBased,
        
        [System.Xml.Serialization.XmlEnumAttribute("static")]
        Static,
        
        [System.Xml.Serialization.XmlEnumAttribute("NEMA")]
        Nema,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("conflictType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConflictType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("from")]
        public string From { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("to")]
        public string To { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("fromLane")]
        public string FromLane { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("toLane")]
        public string ToLane { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("startPos")]
        public string StartPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("endPos")]
        public string EndPos { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("laneTypeType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LaneTypeType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RestrictionType> _restriction;
        
        [System.Xml.Serialization.XmlElementAttribute("restriction")]
        public System.Collections.ObjectModel.Collection<RestrictionType> Restriction
        {
            get
            {
                return _restriction;
            }
            private set
            {
                _restriction = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Restriction collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RestrictionSpecified
        {
            get
            {
                return (this.Restriction.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LaneTypeType" /> class.</para>
        /// </summary>
        public LaneTypeType()
        {
            this._restriction = new System.Collections.ObjectModel.Collection<RestrictionType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("index")]
        public int Index { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("allow")]
        public string Allow { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("disallow")]
        public string Disallow { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("speed")]
        public string Speed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("restrictionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestrictionType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("vClass")]
        public string VClass { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("speed")]
        public string Speed { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("typeType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TypeType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RestrictionType> _restriction;
        
        [System.Xml.Serialization.XmlElementAttribute("restriction")]
        public System.Collections.ObjectModel.Collection<RestrictionType> Restriction
        {
            get
            {
                return _restriction;
            }
            private set
            {
                _restriction = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Restriction collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RestrictionSpecified
        {
            get
            {
                return (this.Restriction.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TypeType" /> class.</para>
        /// </summary>
        public TypeType()
        {
            this._restriction = new System.Collections.ObjectModel.Collection<RestrictionType>();
            this._meso = new System.Collections.ObjectModel.Collection<MesoType>();
            this._laneType = new System.Collections.ObjectModel.Collection<LaneTypeType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MesoType> _meso;
        
        [System.Xml.Serialization.XmlElementAttribute("meso")]
        public System.Collections.ObjectModel.Collection<MesoType> Meso
        {
            get
            {
                return _meso;
            }
            private set
            {
                _meso = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Meso collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MesoSpecified
        {
            get
            {
                return (this.Meso.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<LaneTypeType> _laneType;
        
        [System.Xml.Serialization.XmlElementAttribute("laneType")]
        public System.Collections.ObjectModel.Collection<LaneTypeType> LaneType
        {
            get
            {
                return _laneType;
            }
            private set
            {
                _laneType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LaneType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LaneTypeSpecified
        {
            get
            {
                return (this.LaneType.Count != 0);
            }
        }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("allow")]
        public string Allow { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("disallow")]
        public string Disallow { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("priority")]
        public int Priority { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Priority property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrioritySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("numLanes")]
        public int NumLanes { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumLanes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumLanesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("speed")]
        public string Speed { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("discard")]
        public BoolType Discard { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Discard property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscardSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("oneway")]
        public BoolType Oneway { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Oneway property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnewaySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("widthResolution")]
        public float WidthResolution { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WidthResolution property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthResolutionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("maxWidth")]
        public float MaxWidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxWidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxWidthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("minWidth")]
        public float MinWidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinWidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinWidthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("sidewalkWidth")]
        public string SidewalkWidth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("bikeLaneWidth")]
        public string BikeLaneWidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("spreadType")]
        public TypeTypeSpreadType SpreadType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpreadType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpreadTypeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("mesoType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MesoType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tauff")]
        public float Tauff { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tauff property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TauffSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("taufj")]
        public float Taufj { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Taufj property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaufjSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("taujf")]
        public float Taujf { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Taujf property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaujfSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("taujj")]
        public float Taujj { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Taujj property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaujjSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("jamThreshold")]
        public string JamThreshold { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("junctionControl")]
        public BoolType JunctionControl { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JunctionControl property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JunctionControlSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tlsPenalty")]
        public float TlsPenalty { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TlsPenalty property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TlsPenaltySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tlsFlowPenalty")]
        public float TlsFlowPenalty { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TlsFlowPenalty property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TlsFlowPenaltySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("minorPenalty")]
        public float MinorPenalty { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinorPenalty property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinorPenaltySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("overtaking")]
        public BoolType Overtaking { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Overtaking property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OvertakingSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TypeTypeSpreadType", Namespace="", AnonymousType=true)]
    public enum TypeTypeSpreadType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("center")]
        Center,
        
        [System.Xml.Serialization.XmlEnumAttribute("roadCenter")]
        RoadCenter,
        
        [System.Xml.Serialization.XmlEnumAttribute("right")]
        Right,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("nodeTypeType", Namespace="")]
    public enum NodeTypeType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("traffic_light")]
        TrafficLight,
        
        [System.Xml.Serialization.XmlEnumAttribute("right_before_left")]
        RightBeforeLeft,
        
        [System.Xml.Serialization.XmlEnumAttribute("left_before_right")]
        LeftBeforeRight,
        
        [System.Xml.Serialization.XmlEnumAttribute("priority")]
        Priority,
        
        [System.Xml.Serialization.XmlEnumAttribute("dead_end")]
        DeadEnd,
        
        [System.Xml.Serialization.XmlEnumAttribute("unregulated")]
        Unregulated,
        
        [System.Xml.Serialization.XmlEnumAttribute("traffic_light_unregulated")]
        TrafficLightUnregulated,
        
        [System.Xml.Serialization.XmlEnumAttribute("rail_signal")]
        RailSignal,
        
        [System.Xml.Serialization.XmlEnumAttribute("allway_stop")]
        AllwayStop,
        
        [System.Xml.Serialization.XmlEnumAttribute("priority_stop")]
        PriorityStop,
        
        [System.Xml.Serialization.XmlEnumAttribute("zipper")]
        Zipper,
        
        [System.Xml.Serialization.XmlEnumAttribute("rail_crossing")]
        RailCrossing,
        
        [System.Xml.Serialization.XmlEnumAttribute("traffic_light_right_on_red")]
        TrafficLightRightOnRed,
        
        [System.Xml.Serialization.XmlEnumAttribute("district")]
        District,
        
        [System.Xml.Serialization.XmlEnumAttribute("unknown")]
        Unknown,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("splitType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SplitType
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: \d+(([,;]|\s)\d+)*.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d+(([,;]|\\s)\\d+)*")]
        [System.Xml.Serialization.XmlAttributeAttribute("lanes")]
        public string Lanes { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("pos")]
        public string Pos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("speed")]
        public float Speed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Speed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpeedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public NodeTypeType Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("tl")]
        public string Tl { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("tlType")]
        public TlTypeType TlType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TlType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TlTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: (                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?")]
        [System.Xml.Serialization.XmlAttributeAttribute("shape")]
        public string Shape { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("radius")]
        public float Radius { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Radius property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RadiusSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("keepClear")]
        public BoolType KeepClear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KeepClear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeepClearSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("idBefore")]
        public string IdBefore { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("idAfter")]
        public string IdAfter { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("includeType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncludeType
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("href")]
        public string Href { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("boolOptionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BoolOptionType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public BoolType Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("synonymes")]
        public string Synonymes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("help")]
        public string Help { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("intOptionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IntOptionType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public int Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("synonymes")]
        public string Synonymes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("help")]
        public string Help { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("floatOptionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FloatOptionType
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("synonymes")]
        public string Synonymes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("help")]
        public string Help { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("timeOptionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimeOptionType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        //
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("synonymes")]
        public string Synonymes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("help")]
        public string Help { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("strOptionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StrOptionType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("synonymes")]
        public string Synonymes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("help")]
        public string Help { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("strArrayOptionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StrArrayOptionType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("synonymes")]
        public string Synonymes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("help")]
        public string Help { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("fileOptionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileOptionType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("synonymes")]
        public string Synonymes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("help")]
        public string Help { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("intArrayOptionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IntArrayOptionType
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: (\-)?(\d+)(,(\-)?(\d+))*.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(\\-)?(\\d+)(,(\\-)?(\\d+))*")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public string Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("synonymes")]
        public string Synonymes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("help")]
        public string Help { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tazType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TazType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TazSubType> _tazSource;
        
        [System.Xml.Serialization.XmlElementAttribute("tazSource")]
        public System.Collections.ObjectModel.Collection<TazSubType> TazSource
        {
            get
            {
                return _tazSource;
            }
            private set
            {
                _tazSource = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TazSource collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TazSourceSpecified
        {
            get
            {
                return (this.TazSource.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TazType" /> class.</para>
        /// </summary>
        public TazType()
        {
            this._tazSource = new System.Collections.ObjectModel.Collection<TazSubType>();
            this._tazSink = new System.Collections.ObjectModel.Collection<TazSubType>();
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TazSubType> _tazSink;
        
        [System.Xml.Serialization.XmlElementAttribute("tazSink")]
        public System.Collections.ObjectModel.Collection<TazSubType> TazSink
        {
            get
            {
                return _tazSink;
            }
            private set
            {
                _tazSink = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TazSink collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TazSinkSpecified
        {
            get
            {
                return (this.TazSink.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("edges")]
        public string Edges { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: (                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?")]
        [System.Xml.Serialization.XmlAttributeAttribute("shape")]
        public string Shape { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("center")]
        public string Center { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fill")]
        public NetFile.BoolType Fill { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FillSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: ((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?)")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tazSubType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TazSubType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("weight")]
        public string Weight { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("netType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("net", Namespace="")]
    public partial class NetType
    {
        
        //
        [System.Xml.Serialization.XmlElementAttribute("location")]
        public NetFile.LocationType Location { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.TypeType> _type;
        
        [System.Xml.Serialization.XmlElementAttribute("type")]
        public System.Collections.ObjectModel.Collection<NetFile.TypeType> Type
        {
            get
            {
                return _type;
            }
            private set
            {
                _type = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Type collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return (this.Type.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="NetType" /> class.</para>
        /// </summary>
        public NetType()
        {
            this._type = new System.Collections.ObjectModel.Collection<NetFile.TypeType>();
            this._edge = new System.Collections.ObjectModel.Collection<EdgeType>();
            this._tlLogic = new System.Collections.ObjectModel.Collection<NetFile.TlLogicType>();
            this._junction = new System.Collections.ObjectModel.Collection<JunctionType>();
            this._connection = new System.Collections.ObjectModel.Collection<ConnectionType>();
            this._prohibition = new System.Collections.ObjectModel.Collection<ProhibitionType>();
            this._roundabout = new System.Collections.ObjectModel.Collection<RoundaboutType>();
            this._taz = new System.Collections.ObjectModel.Collection<NetFile.TazType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EdgeType> _edge;
        
        [System.Xml.Serialization.XmlElementAttribute("edge")]
        public System.Collections.ObjectModel.Collection<EdgeType> Edge
        {
            get
            {
                return _edge;
            }
            private set
            {
                _edge = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Edge collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EdgeSpecified
        {
            get
            {
                return (this.Edge.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.TlLogicType> _tlLogic;
        
        [System.Xml.Serialization.XmlElementAttribute("tlLogic")]
        public System.Collections.ObjectModel.Collection<NetFile.TlLogicType> TlLogic
        {
            get
            {
                return _tlLogic;
            }
            private set
            {
                _tlLogic = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TlLogic collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TlLogicSpecified
        {
            get
            {
                return (this.TlLogic.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<JunctionType> _junction;
        
        [System.Xml.Serialization.XmlElementAttribute("junction")]
        public System.Collections.ObjectModel.Collection<JunctionType> Junction
        {
            get
            {
                return _junction;
            }
            private set
            {
                _junction = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Junction collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JunctionSpecified
        {
            get
            {
                return (this.Junction.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConnectionType> _connection;
        
        [System.Xml.Serialization.XmlElementAttribute("connection")]
        public System.Collections.ObjectModel.Collection<ConnectionType> Connection
        {
            get
            {
                return _connection;
            }
            private set
            {
                _connection = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Connection collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConnectionSpecified
        {
            get
            {
                return (this.Connection.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ProhibitionType> _prohibition;
        
        [System.Xml.Serialization.XmlElementAttribute("prohibition")]
        public System.Collections.ObjectModel.Collection<ProhibitionType> Prohibition
        {
            get
            {
                return _prohibition;
            }
            private set
            {
                _prohibition = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Prohibition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProhibitionSpecified
        {
            get
            {
                return (this.Prohibition.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RoundaboutType> _roundabout;
        
        [System.Xml.Serialization.XmlElementAttribute("roundabout")]
        public System.Collections.ObjectModel.Collection<RoundaboutType> Roundabout
        {
            get
            {
                return _roundabout;
            }
            private set
            {
                _roundabout = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Roundabout collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoundaboutSpecified
        {
            get
            {
                return (this.Roundabout.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.TazType> _taz;
        
        [System.Xml.Serialization.XmlElementAttribute("taz")]
        public System.Collections.ObjectModel.Collection<NetFile.TazType> Taz
        {
            get
            {
                return _taz;
            }
            private set
            {
                _taz = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Taz collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TazSpecified
        {
            get
            {
                return (this.Taz.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: \d+.\d+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d+.\\d+")]
        [System.Xml.Serialization.XmlAttributeAttribute("version")]
        public string Version { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("junctionCornerDetail")]
        public int JunctionCornerDetail { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JunctionCornerDetail property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JunctionCornerDetailSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("junctionLinkDetail")]
        public int JunctionLinkDetail { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JunctionLinkDetail property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JunctionLinkDetailSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lefthand")]
        public NetFile.BoolType Lefthand { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lefthand property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LefthandSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("rectangularLaneCut")]
        public NetFile.BoolType RectangularLaneCut { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RectangularLaneCut property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RectangularLaneCutSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("walkingareas")]
        public NetFile.BoolType Walkingareas { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Walkingareas property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WalkingareasSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("limitTurnSpeed")]
        public string LimitTurnSpeed { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("checkLaneFoesAll")]
        public NetFile.BoolType CheckLaneFoesAll { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CheckLaneFoesAll property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CheckLaneFoesAllSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("checkLaneFoesRoundabout")]
        public NetFile.BoolType CheckLaneFoesRoundabout { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CheckLaneFoesRoundabout property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CheckLaneFoesRoundaboutSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("tlsIgnoreInternalJunctionJam")]
        public NetFile.BoolType TlsIgnoreInternalJunctionJam { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TlsIgnoreInternalJunctionJam property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TlsIgnoreInternalJunctionJamSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("spreadType")]
        public SpreadTypeType SpreadType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpreadType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpreadTypeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("avoidOverlap")]
        public NetFile.BoolType AvoidOverlap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AvoidOverlap property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AvoidOverlapSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("junctionHigherSpeed")]
        public NetFile.BoolType JunctionHigherSpeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JunctionHigherSpeed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JunctionHigherSpeedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("internalJunctionsVehicleWidth")]
        public string InternalJunctionsVehicleWidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("junctionsMinimalShape")]
        public NetFile.BoolType JunctionsMinimalShape { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JunctionsMinimalShape property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JunctionsMinimalShapeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("junctionsEndpointShape")]
        public NetFile.BoolType JunctionsEndpointShape { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JunctionsEndpointShape property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JunctionsEndpointShapeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("edgeType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EdgeType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<LaneType> _lane;
        
        [System.Xml.Serialization.XmlElementAttribute("lane")]
        public System.Collections.ObjectModel.Collection<LaneType> Lane
        {
            get
            {
                return _lane;
            }
            private set
            {
                _lane = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Lane collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LaneSpecified
        {
            get
            {
                return (this.Lane.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EdgeType" /> class.</para>
        /// </summary>
        public EdgeType()
        {
            this._lane = new System.Collections.ObjectModel.Collection<LaneType>();
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
            this._stopOffset = new System.Collections.ObjectModel.Collection<StopOffsetType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StopOffsetType> _stopOffset;
        
        [System.Xml.Serialization.XmlElementAttribute("stopOffset")]
        public System.Collections.ObjectModel.Collection<StopOffsetType> StopOffset
        {
            get
            {
                return _stopOffset;
            }
            private set
            {
                _stopOffset = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StopOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StopOffsetSpecified
        {
            get
            {
                return (this.StopOffset.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("function")]
        public EdgeTypeFunction Function { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Function property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FunctionSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("from")]
        public string From { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("to")]
        public string To { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("priority")]
        public string Priority { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public float Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Length property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("bidi")]
        public string Bidi { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern:                  [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 \s                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               .</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 \s                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               ")]
        [System.Xml.Serialization.XmlAttributeAttribute("shape")]
        public string Shape { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("distance")]
        public string Distance { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("spreadType")]
        public SpreadTypeType SpreadType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpreadType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpreadTypeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("crossingEdges")]
        public string CrossingEdges { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("laneType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LaneType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NeighType> _neigh;
        
        [System.Xml.Serialization.XmlElementAttribute("neigh")]
        public System.Collections.ObjectModel.Collection<NeighType> Neigh
        {
            get
            {
                return _neigh;
            }
            private set
            {
                _neigh = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Neigh collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NeighSpecified
        {
            get
            {
                return (this.Neigh.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LaneType" /> class.</para>
        /// </summary>
        public LaneType()
        {
            this._neigh = new System.Collections.ObjectModel.Collection<NeighType>();
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
            this._stopOffset = new System.Collections.ObjectModel.Collection<StopOffsetType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StopOffsetType> _stopOffset;
        
        [System.Xml.Serialization.XmlElementAttribute("stopOffset")]
        public System.Collections.ObjectModel.Collection<StopOffsetType> StopOffset
        {
            get
            {
                return _stopOffset;
            }
            private set
            {
                _stopOffset = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the StopOffset collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StopOffsetSpecified
        {
            get
            {
                return (this.StopOffset.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("index")]
        public string Index { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("allow")]
        public string Allow { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("disallow")]
        public string Disallow { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("prefer")]
        public string Prefer { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("speed")]
        public float Speed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("friction")]
        public float Friction { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Friction property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrictionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public float Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("endOffset")]
        public float EndOffset { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndOffset property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndOffsetSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public float Width { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Width property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("acceleration")]
        public NetFile.BoolType Acceleration { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Acceleration property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccelerationSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern:                  [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 \s                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               .</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 \s                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               ")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("shape")]
        public string Shape { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("customShape")]
        public NetFile.BoolType CustomShape { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CustomShape property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomShapeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("changeRight")]
        public string ChangeRight { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("changeLeft")]
        public string ChangeLeft { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: (                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?")]
        [System.Xml.Serialization.XmlAttributeAttribute("outlineShape")]
        public string OutlineShape { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("neighType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NeighType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("lane")]
        public string Lane { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("stopOffsetType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StopOffsetType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("value")]
        public float Value { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vClasses")]
        public string VClasses { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("exceptions")]
        public string Exceptions { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EdgeTypeFunction", Namespace="", AnonymousType=true)]
    public enum EdgeTypeFunction
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("normal")]
        Normal,
        
        [System.Xml.Serialization.XmlEnumAttribute("internal")]
        Internal,
        
        [System.Xml.Serialization.XmlEnumAttribute("connector")]
        Connector,
        
        [System.Xml.Serialization.XmlEnumAttribute("crossing")]
        Crossing,
        
        [System.Xml.Serialization.XmlEnumAttribute("walkingarea")]
        Walkingarea,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("spreadTypeType", Namespace="")]
    public enum SpreadTypeType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("center")]
        Center,
        
        [System.Xml.Serialization.XmlEnumAttribute("roadCenter")]
        RoadCenter,
        
        [System.Xml.Serialization.XmlEnumAttribute("right")]
        Right,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("junctionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JunctionType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RequestType> _request;
        
        [System.Xml.Serialization.XmlElementAttribute("request")]
        public System.Collections.ObjectModel.Collection<RequestType> Request
        {
            get
            {
                return _request;
            }
            private set
            {
                _request = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Request collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequestSpecified
        {
            get
            {
                return (this.Request.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="JunctionType" /> class.</para>
        /// </summary>
        public JunctionType()
        {
            this._request = new System.Collections.ObjectModel.Collection<RequestType>();
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public string X { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public string Y { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("z")]
        public string Z { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public JunctionTypeType Type { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("incLanes")]
        public string IncLanes { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("intLanes")]
        public string IntLanes { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: (                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?")]
        [System.Xml.Serialization.XmlAttributeAttribute("shape")]
        public string Shape { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("radius")]
        public float Radius { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Radius property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RadiusSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("customShape")]
        public NetFile.BoolType CustomShape { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CustomShape property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomShapeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("rightOfWay")]
        public JunctionTypeRightOfWay RightOfWay { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RightOfWay property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RightOfWaySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fringe")]
        public JunctionTypeFringe Fringe { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fringe property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FringeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("requestType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("index")]
        public string Index { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [01]+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[01]+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("response")]
        public string Response { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [01]+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[01]+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("foes")]
        public string Foes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("cont")]
        public NetFile.BoolType Cont { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cont property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("JunctionTypeType", Namespace="", AnonymousType=true)]
    public enum JunctionTypeType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("traffic_light")]
        TrafficLight,
        
        [System.Xml.Serialization.XmlEnumAttribute("traffic_light_unregulated")]
        TrafficLightUnregulated,
        
        [System.Xml.Serialization.XmlEnumAttribute("traffic_light_right_on_red")]
        TrafficLightRightOnRed,
        
        [System.Xml.Serialization.XmlEnumAttribute("rail_signal")]
        RailSignal,
        
        [System.Xml.Serialization.XmlEnumAttribute("rail_crossing")]
        RailCrossing,
        
        [System.Xml.Serialization.XmlEnumAttribute("priority")]
        Priority,
        
        [System.Xml.Serialization.XmlEnumAttribute("priority_stop")]
        PriorityStop,
        
        [System.Xml.Serialization.XmlEnumAttribute("left_before_right")]
        LeftBeforeRight,
        
        [System.Xml.Serialization.XmlEnumAttribute("right_before_left")]
        RightBeforeLeft,
        
        [System.Xml.Serialization.XmlEnumAttribute("allway_stop")]
        AllwayStop,
        
        [System.Xml.Serialization.XmlEnumAttribute("zipper")]
        Zipper,
        
        [System.Xml.Serialization.XmlEnumAttribute("district")]
        District,
        
        [System.Xml.Serialization.XmlEnumAttribute("unregulated")]
        Unregulated,
        
        [System.Xml.Serialization.XmlEnumAttribute("internal")]
        Internal,
        
        [System.Xml.Serialization.XmlEnumAttribute("dead_end")]
        DeadEnd,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("JunctionTypeRightOfWay", Namespace="", AnonymousType=true)]
    public enum JunctionTypeRightOfWay
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("default")]
        Default,
        
        [System.Xml.Serialization.XmlEnumAttribute("mixedPriority")]
        MixedPriority,
        
        [System.Xml.Serialization.XmlEnumAttribute("allwayStop")]
        AllwayStop,
        
        [System.Xml.Serialization.XmlEnumAttribute("edgePriority")]
        EdgePriority,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("JunctionTypeFringe", Namespace="", AnonymousType=true)]
    public enum JunctionTypeFringe
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("default")]
        Default,
        
        [System.Xml.Serialization.XmlEnumAttribute("outer")]
        Outer,
        
        [System.Xml.Serialization.XmlEnumAttribute("inner")]
        Inner,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("connectionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectionType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ConnectionType" /> class.</para>
        /// </summary>
        public ConnectionType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
            this._conflict = new System.Collections.ObjectModel.Collection<NetFile.ConflictType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ConflictType> _conflict;
        
        [System.Xml.Serialization.XmlElementAttribute("conflict")]
        public System.Collections.ObjectModel.Collection<NetFile.ConflictType> Conflict
        {
            get
            {
                return _conflict;
            }
            private set
            {
                _conflict = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Conflict collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConflictSpecified
        {
            get
            {
                return (this.Conflict.Count != 0);
            }
        }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("from")]
        public string From { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("to")]
        public string To { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("fromLane")]
        public string FromLane { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("toLane")]
        public string ToLane { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("pass")]
        public NetFile.BoolType Pass { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Pass property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PassSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("keepClear")]
        public NetFile.BoolType KeepClear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KeepClear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeepClearSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("contPos")]
        public string ContPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("visibility")]
        public string Visibility { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("allow")]
        public string Allow { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("disallow")]
        public string Disallow { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("speed")]
        public string Speed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public string Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: (                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?")]
        [System.Xml.Serialization.XmlAttributeAttribute("shape")]
        public string Shape { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("uncontrolled")]
        public NetFile.BoolType Uncontrolled { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Uncontrolled property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UncontrolledSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("via")]
        public string Via { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("tl")]
        public string Tl { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("linkIndex")]
        public string LinkIndex { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("linkIndex2")]
        public string LinkIndex2 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("changeRight")]
        public string ChangeRight { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("changeLeft")]
        public string ChangeLeft { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("indirect")]
        public NetFile.BoolType Indirect { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Indirect property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndirectSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("dir")]
        public ConnectionTypeDir Dir { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("state")]
        public ConnectionTypeState State { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConnectionTypeDir", Namespace="", AnonymousType=true)]
    public enum ConnectionTypeDir
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("s")]
        S,
        
        [System.Xml.Serialization.XmlEnumAttribute("t")]
        T,
        
        [System.Xml.Serialization.XmlEnumAttribute("T")]
        T1,
        
        [System.Xml.Serialization.XmlEnumAttribute("l")]
        L,
        
        [System.Xml.Serialization.XmlEnumAttribute("r")]
        R,
        
        [System.Xml.Serialization.XmlEnumAttribute("L")]
        L1,
        
        [System.Xml.Serialization.XmlEnumAttribute("R")]
        R1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConnectionTypeState", Namespace="", AnonymousType=true)]
    public enum ConnectionTypeState
    {
        
        M,
        
        [System.Xml.Serialization.XmlEnumAttribute("m")]
        M1,
        
        O,
        
        [System.Xml.Serialization.XmlEnumAttribute("o")]
        O1,
        
        [System.Xml.Serialization.XmlEnumAttribute("=")]
        Empty,
        
        [System.Xml.Serialization.XmlEnumAttribute("-")]
        Empty1,
        
        [System.Xml.Serialization.XmlEnumAttribute("s")]
        S,
        
        [System.Xml.Serialization.XmlEnumAttribute("w")]
        W,
        
        Z,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("prohibitionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProhibitionType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("prohibitor")]
        public string Prohibitor { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("prohibited")]
        public string Prohibited { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("roundaboutType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RoundaboutType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("nodes")]
        public string Nodes { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("edges")]
        public string Edges { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("vTypeType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VTypeType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="VTypeType" /> class.</para>
        /// </summary>
        public VTypeType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("carFollowing-IDM")]
        public CfIdmType CarFollowingIdm { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("carFollowing-IDMM")]
        public CfIdmmType CarFollowingIdmm { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("carFollowing-EIDM")]
        public CfEidmType CarFollowingEidm { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("carFollowing-Krauss")]
        public CfKraussType CarFollowingKrauss { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("carFollowing-KraussPS")]
        public CfKraussType CarFollowingKraussPs { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("carFollowing-KraussOrig1")]
        public CfKraussType CarFollowingKraussOrig1 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("carFollowing-SmartSK")]
        public CfSmartType CarFollowingSmartSk { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("carFollowing-Daniel1")]
        public CfSmartType CarFollowingDaniel1 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("carFollowing-PWagner2009")]
        public CfPWagType CarFollowingPWagner2009 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("carFollowing-BKerner")]
        public CfBKernerType CarFollowingBKerner { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("carFollowing-Wiedemann")]
        public CfWiedemannType CarFollowingWiedemann { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("carFollowing-W99")]
        public CfW99Type CarFollowingW99 { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("carFollowing-ACC")]
        public CfAccType CarFollowingAcc { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("carFollowing-CACC")]
        public CfCaccType CarFollowingCacc { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("carFollowing-CC")]
        public CfCcType CarFollowingCc { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public float Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Length property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("minGap")]
        public float MinGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinGap property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinGapSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("maxSpeed")]
        public float MaxSpeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxSpeed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxSpeedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("desiredMaxSpeed")]
        public float DesiredMaxSpeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DesiredMaxSpeed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DesiredMaxSpeedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("probability")]
        public float Probability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Probability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbabilitySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: (norm|normc)\(                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                         (,                           [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                           (,                             [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                           )?                         )?                       \).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(norm|normc)\(                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                         (,                           [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                           (,                             [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                           )?                         )?                       \)")]
        [System.Xml.Serialization.XmlAttributeAttribute("speedFactor")]
        public string SpeedFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("speedDev")]
        public float SpeedDev { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpeedDev property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpeedDevSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vClass")]
        public string VClass { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("emissionClass")]
        public string EmissionClass { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("maneuverAngleTimes")]
        public string ManeuverAngleTimes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("guiShape")]
        public string GuiShape { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public float Width { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Width property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public float Height { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Height property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("mass")]
        public float Mass { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Mass property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MassSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: ((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?)")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("accel")]
        public float Accel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Accel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("decel")]
        public float Decel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Decel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("emergencyDecel")]
        public float EmergencyDecel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmergencyDecel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmergencyDecelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("apparentDecel")]
        public float ApparentDecel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApparentDecel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApparentDecelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parkingBadges")]
        public string ParkingBadges { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("personCapacity")]
        public string PersonCapacity { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("containerCapacity")]
        public string ContainerCapacity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("boardingDuration")]
        public float BoardingDuration { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BoardingDuration property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BoardingDurationSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("loadingDuration")]
        public float LoadingDuration { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoadingDuration property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LoadingDurationSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("scale")]
        public float Scale { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Scale property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lcStrategic")]
        public string LcStrategic { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lcCooperative")]
        public string LcCooperative { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lcSpeedGain")]
        public string LcSpeedGain { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lcKeepRight")]
        public string LcKeepRight { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lcSublane")]
        public string LcSublane { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lcOpposite")]
        public string LcOpposite { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lcPushy")]
        public string LcPushy { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcPushyGap")]
        public float LcPushyGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcPushyGap property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcPushyGapSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcStrategicLookahead")]
        public float LcStrategicLookahead { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcStrategicLookahead property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcStrategicLookaheadSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcAssertive")]
        public float LcAssertive { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcAssertive property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcAssertiveSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcLookaheadLeft")]
        public float LcLookaheadLeft { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcLookaheadLeft property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcLookaheadLeftSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcSpeedGainRight")]
        public float LcSpeedGainRight { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcSpeedGainRight property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcSpeedGainRightSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcSpeedGainLookahead")]
        public float LcSpeedGainLookahead { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcSpeedGainLookahead property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcSpeedGainLookaheadSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcSpeedGainRemainTime")]
        public float LcSpeedGainRemainTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcSpeedGainRemainTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcSpeedGainRemainTimeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcCooperativeRoundabout")]
        public float LcCooperativeRoundabout { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcCooperativeRoundabout property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcCooperativeRoundaboutSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("lcCooperativeSpeed")]
        public string LcCooperativeSpeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcTurnAlignmentDistance")]
        public float LcTurnAlignmentDistance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcTurnAlignmentDistance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcTurnAlignmentDistanceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcImpatience")]
        public float LcImpatience { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcImpatience property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcImpatienceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcTimeToImpatience")]
        public float LcTimeToImpatience { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcTimeToImpatience property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcTimeToImpatienceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcAccelLat")]
        public float LcAccelLat { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcAccelLat property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcAccelLatSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcMaxSpeedLatStanding")]
        public float LcMaxSpeedLatStanding { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcMaxSpeedLatStanding property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcMaxSpeedLatStandingSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lcMaxSpeedLatFactor")]
        public string LcMaxSpeedLatFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcMaxDistLatStanding")]
        public float LcMaxDistLatStanding { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcMaxDistLatStanding property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcMaxDistLatStandingSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcOvertakeRight")]
        public float LcOvertakeRight { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcOvertakeRight property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcOvertakeRightSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcLaneDiscipline")]
        public float LcLaneDiscipline { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcLaneDiscipline property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcLaneDisciplineSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("lcSigma")]
        public float LcSigma { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LcSigma property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LcSigmaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lcKeepRightAcceptanceTime")]
        public string LcKeepRightAcceptanceTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lcOvertakeDeltaSpeedFactor")]
        public string LcOvertakeDeltaSpeedFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lcContRight")]
        public string LcContRight { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("maxSpeedLat")]
        public float MaxSpeedLat { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxSpeedLat property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxSpeedLatSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("latAlignment")]
        public string LatAlignment { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("actionStepLength")]
        public float ActionStepLength { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActionStepLength property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActionStepLengthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hasDriverState")]
        public NetFile.BoolType HasDriverState { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasDriverState property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasDriverStateSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("minGapLat")]
        public float MinGapLat { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinGapLat property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinGapLatSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("jmCrossingGap")]
        public float JmCrossingGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JmCrossingGap property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JmCrossingGapSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("jmDriveAfterYellowTime")]
        public string JmDriveAfterYellowTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("jmDriveAfterRedTime")]
        public string JmDriveAfterRedTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("jmDriveRedSpeed")]
        public float JmDriveRedSpeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JmDriveRedSpeed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JmDriveRedSpeedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("jmIgnoreKeepClearTime")]
        public string JmIgnoreKeepClearTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("jmIgnoreFoeSpeed")]
        public float JmIgnoreFoeSpeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JmIgnoreFoeSpeed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JmIgnoreFoeSpeedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("jmIgnoreFoeProb")]
        public float JmIgnoreFoeProb { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JmIgnoreFoeProb property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JmIgnoreFoeProbSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("jmIgnoreJunctionFoeProb")]
        public float JmIgnoreJunctionFoeProb { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JmIgnoreJunctionFoeProb property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JmIgnoreJunctionFoeProbSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum inclusive value: 1.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("jmSigmaMinor")]
        public float JmSigmaMinor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JmSigmaMinor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JmSigmaMinorSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("jmStoplineGap")]
        public float JmStoplineGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JmStoplineGap property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JmStoplineGapSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("jmStoplineGapMinor")]
        public float JmStoplineGapMinor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JmStoplineGapMinor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JmStoplineGapMinorSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("jmTimegapMinor")]
        public float JmTimegapMinor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JmTimegapMinor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JmTimegapMinorSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("jmExtraGap")]
        public float JmExtraGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JmExtraGap property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JmExtraGapSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("jmAdvance")]
        public float JmAdvance { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JmAdvance property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JmAdvanceSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("jmStopSignWait")]
        public float JmStopSignWait { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JmStopSignWait property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JmStopSignWaitSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("jmAllwayStopWait")]
        public float JmAllwayStopWait { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the JmAllwayStopWait property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JmAllwayStopWaitSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum inclusive value: 1.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("sigma")]
        public float Sigma { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sigma property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SigmaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("sigmaStep")]
        public float SigmaStep { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SigmaStep property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SigmaStepSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("impatience")]
        public string Impatience { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tau")]
        public float Tau { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tau property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TauSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("delta")]
        public string Delta { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("stepping")]
        public float Stepping { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Stepping property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SteppingSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("adaptTime")]
        public string AdaptTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("adaptFactor")]
        public string AdaptFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("tmp1")]
        public string Tmp1 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("tmp2")]
        public string Tmp2 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("tmp3")]
        public string Tmp3 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("tmp4")]
        public string Tmp4 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("tmp5")]
        public string Tmp5 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("tauLast")]
        public string TauLast { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("apProb")]
        public string ApProb { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("k")]
        public string K { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("phi")]
        public string Phi { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("security")]
        public string Security { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("estimation")]
        public string Estimation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("speedControlGain")]
        public string SpeedControlGain { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("speedControlMinGap")]
        public string SpeedControlMinGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapClosingControlGainSpeed")]
        public string GapClosingControlGainSpeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapClosingControlGainSpace")]
        public string GapClosingControlGainSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapControlGainSpeed")]
        public string GapControlGainSpeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapControlGainSpace")]
        public string GapControlGainSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("collisionAvoidanceGainSpeed")]
        public string CollisionAvoidanceGainSpeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("collisionAvoidanceGainSpace")]
        public string CollisionAvoidanceGainSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("collisionAvoidanceOverride")]
        public string CollisionAvoidanceOverride { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("tauCACCToACC")]
        public string TauCaccToAcc { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("applyDriverState")]
        public string ApplyDriverState { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("carFollowModel")]
        public string CarFollowModel { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("trainType")]
        public VTypeTypeTrainType TrainType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TrainType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrainTypeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("laneChangeModel")]
        public VTypeTypeLaneChangeModel LaneChangeModel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LaneChangeModel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LaneChangeModelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("imgFile")]
        public string ImgFile { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("osgFile")]
        public string OsgFile { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc1")]
        public string Cc1 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc2")]
        public string Cc2 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc3")]
        public string Cc3 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc4")]
        public string Cc4 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc5")]
        public string Cc5 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc6")]
        public string Cc6 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc7")]
        public string Cc7 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc8")]
        public string Cc8 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc9")]
        public string Cc9 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("c1")]
        public string C1 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("ccDecel")]
        public string CcDecel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("constSpacing")]
        public string ConstSpacing { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("kp")]
        public string Kp { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lambda")]
        public string Lambda { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("omegaN")]
        public string OmegaN { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("tauEngine")]
        public string TauEngine { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("xi")]
        public string Xi { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lanesCount")]
        public string LanesCount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("ccAccel")]
        public string CcAccel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("ploegKp")]
        public string PloegKp { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("ploegKd")]
        public string PloegKd { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("ploegH")]
        public string PloegH { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("flatbedKa")]
        public string FlatbedKa { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("flatbedKv")]
        public string FlatbedKv { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("flatbedKp")]
        public string FlatbedKp { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("flatbedD")]
        public string FlatbedD { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("flatbedH")]
        public string FlatbedH { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("collisionMinGapFactor")]
        public string CollisionMinGapFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("speedControlGainCACC")]
        public string SpeedControlGainCacc { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapClosingControlGainGap")]
        public string GapClosingControlGainGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapClosingControlGainGapDot")]
        public string GapClosingControlGainGapDot { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapControlGainGap")]
        public string GapControlGainGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapControlGainGapDot")]
        public string GapControlGainGapDot { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("collisionAvoidanceGainGap")]
        public string CollisionAvoidanceGainGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("collisionAvoidanceGainGapDot")]
        public string CollisionAvoidanceGainGapDot { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tPersDrive")]
        public float TPersDrive { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TPersDrive property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TPersDriveSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tpreview")]
        public float Tpreview { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tpreview property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TpreviewSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("treaction")]
        public float Treaction { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Treaction property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TreactionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tPersEstimate")]
        public float TPersEstimate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TPersEstimate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TPersEstimateSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum inclusive value: 1.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("ccoolness")]
        public float Ccoolness { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ccoolness property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CcoolnessSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("sigmaleader")]
        public float Sigmaleader { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sigmaleader property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SigmaleaderSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("sigmagap")]
        public float Sigmagap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sigmagap property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SigmagapSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("sigmaerror")]
        public float Sigmaerror { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sigmaerror property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SigmaerrorSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("jerkmax")]
        public float Jerkmax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Jerkmax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JerkmaxSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("epsilonacc")]
        public float Epsilonacc { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Epsilonacc property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EpsilonaccSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("taccmax")]
        public float Taccmax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Taccmax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaccmaxSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("Mflatness")]
        public float Mflatness { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Mflatness property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MflatnessSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("Mbegin")]
        public float Mbegin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Mbegin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MbeginSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vehdynamics")]
        public NetFile.BoolType Vehdynamics { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Vehdynamics property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VehdynamicsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("maxvehpreview")]
        public int Maxvehpreview { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Maxvehpreview property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxvehpreviewSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("startupDelay")]
        public float StartupDelay { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartupDelay property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartupDelaySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("timeToTeleport")]
        public string TimeToTeleport { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("timeToTeleportBidi")]
        public string TimeToTeleportBidi { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("speedFactorPremature")]
        public float SpeedFactorPremature { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpeedFactorPremature property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpeedFactorPrematureSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("boardingFactor")]
        public string BoardingFactor { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("speedTable")]
        public string SpeedTable { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("tractionTable")]
        public string TractionTable { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("resistanceTable")]
        public string ResistanceTable { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("massFactor")]
        public float MassFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MassFactor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MassFactorSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("maxPower")]
        public float MaxPower { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxPower property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxPowerSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("maxTraction")]
        public float MaxTraction { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxTraction property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxTractionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("resCoef_constant")]
        public string ResCoefConstant { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("resCoef_linear")]
        public string ResCoefLinear { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("resCoef_quadratic")]
        public string ResCoefQuadratic { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("cfIDMType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CfIdmType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("accel")]
        public float Accel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Accel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("decel")]
        public float Decel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Decel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tau")]
        public float Tau { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tau property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TauSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("delta")]
        public string Delta { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("stepping")]
        public float Stepping { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Stepping property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SteppingSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("cfIDMMType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CfIdmmType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("accel")]
        public float Accel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Accel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("decel")]
        public float Decel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Decel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tau")]
        public float Tau { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tau property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TauSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("adaptTime")]
        public string AdaptTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("adaptFactor")]
        public string AdaptFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("stepping")]
        public float Stepping { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Stepping property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SteppingSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("cfEIDMType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CfEidmType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("accel")]
        public float Accel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Accel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("decel")]
        public float Decel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Decel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("stepping")]
        public float Stepping { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Stepping property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SteppingSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("delta")]
        public string Delta { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tau")]
        public float Tau { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tau property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TauSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tPersDrive")]
        public float TPersDrive { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TPersDrive property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TPersDriveSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tpreview")]
        public float Tpreview { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tpreview property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TpreviewSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("treaction")]
        public float Treaction { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Treaction property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TreactionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tPersEstimate")]
        public float TPersEstimate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TPersEstimate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TPersEstimateSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum inclusive value: 1.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("ccoolness")]
        public float Ccoolness { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ccoolness property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CcoolnessSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("sigmaleader")]
        public float Sigmaleader { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sigmaleader property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SigmaleaderSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("sigmagap")]
        public float Sigmagap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sigmagap property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SigmagapSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("sigmaerror")]
        public float Sigmaerror { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sigmaerror property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SigmaerrorSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("jerkmax")]
        public float Jerkmax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Jerkmax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JerkmaxSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("epsilonacc")]
        public float Epsilonacc { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Epsilonacc property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EpsilonaccSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("taccmax")]
        public float Taccmax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Taccmax property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaccmaxSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("Mflatness")]
        public float Mflatness { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Mflatness property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MflatnessSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("Mbegin")]
        public float Mbegin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Mbegin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MbeginSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vehdynamics")]
        public NetFile.BoolType Vehdynamics { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Vehdynamics property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VehdynamicsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("maxvehpreview")]
        public int Maxvehpreview { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Maxvehpreview property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxvehpreviewSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("cfKraussType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CfKraussType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("accel")]
        public float Accel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Accel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("decel")]
        public float Decel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Decel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum inclusive value: 1.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("sigma")]
        public float Sigma { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sigma property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SigmaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("sigmaStep")]
        public float SigmaStep { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SigmaStep property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SigmaStepSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tau")]
        public float Tau { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tau property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TauSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("cfSmartType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CfSmartType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("accel")]
        public float Accel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Accel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("decel")]
        public float Decel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Decel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum inclusive value: 1.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("sigma")]
        public float Sigma { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sigma property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SigmaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("sigmaStep")]
        public float SigmaStep { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SigmaStep property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SigmaStepSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tau")]
        public float Tau { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tau property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TauSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("tmp1")]
        public string Tmp1 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("tmp2")]
        public string Tmp2 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("tmp3")]
        public string Tmp3 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("tmp4")]
        public string Tmp4 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("tmp5")]
        public string Tmp5 { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("cfPWagType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CfPWagType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("accel")]
        public float Accel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Accel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("decel")]
        public float Decel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Decel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum inclusive value: 1.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("sigma")]
        public float Sigma { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sigma property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SigmaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tau")]
        public float Tau { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tau property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TauSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("tauLast")]
        public string TauLast { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("apProb")]
        public string ApProb { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("cfBKernerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CfBKernerType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("accel")]
        public float Accel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Accel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("decel")]
        public float Decel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Decel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum inclusive value: 1.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("sigma")]
        public float Sigma { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Sigma property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SigmaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tau")]
        public float Tau { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tau property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TauSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("k")]
        public string K { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("phi")]
        public string Phi { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("cfWiedemannType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CfWiedemannType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("accel")]
        public float Accel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Accel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("decel")]
        public float Decel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Decel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tau")]
        public float Tau { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tau property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TauSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("security")]
        public string Security { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("estimation")]
        public string Estimation { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("cfW99Type", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CfW99Type
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc1")]
        public string Cc1 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc2")]
        public string Cc2 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc3")]
        public string Cc3 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc4")]
        public string Cc4 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc5")]
        public string Cc5 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc6")]
        public string Cc6 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc7")]
        public string Cc7 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc8")]
        public string Cc8 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cc9")]
        public string Cc9 { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("cfACCType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CfAccType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("accel")]
        public float Accel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Accel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("decel")]
        public float Decel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Decel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("speedControlGain")]
        public string SpeedControlGain { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapClosingControlGainSpeed")]
        public string GapClosingControlGainSpeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapClosingControlGainSpace")]
        public string GapClosingControlGainSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapControlGainSpeed")]
        public string GapControlGainSpeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapControlGainSpace")]
        public string GapControlGainSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("collisionAvoidanceGainSpeed")]
        public string CollisionAvoidanceGainSpeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("collisionAvoidanceGainSpace")]
        public string CollisionAvoidanceGainSpace { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("cfCACCType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CfCaccType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("accel")]
        public float Accel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Accel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("decel")]
        public float Decel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Decel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("emergencyDecel")]
        public string EmergencyDecel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("collisionMinGapFactor")]
        public string CollisionMinGapFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tau")]
        public float Tau { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tau property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TauSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("speedControlGainCACC")]
        public string SpeedControlGainCacc { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapClosingControlGainGap")]
        public string GapClosingControlGainGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapClosingControlGainGapDot")]
        public string GapClosingControlGainGapDot { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapControlGainGap")]
        public string GapControlGainGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapControlGainGapDot")]
        public string GapControlGainGapDot { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("collisionAvoidanceGainGap")]
        public string CollisionAvoidanceGainGap { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("collisionAvoidanceGainGapDot")]
        public string CollisionAvoidanceGainGapDot { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapClosingControlGainSpeed")]
        public string GapClosingControlGainSpeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapClosingControlGainSpace")]
        public string GapClosingControlGainSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapControlGainSpeed")]
        public string GapControlGainSpeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("gapControlGainSpace")]
        public string GapControlGainSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("collisionAvoidanceGainSpeed")]
        public string CollisionAvoidanceGainSpeed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("collisionAvoidanceGainSpace")]
        public string CollisionAvoidanceGainSpace { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("cfCCType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CfCcType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("accel")]
        public float Accel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Accel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("decel")]
        public float Decel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Decel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecelSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("tau")]
        public float Tau { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tau property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TauSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("c1")]
        public string C1 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("ccDecel")]
        public string CcDecel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("constSpacing")]
        public string ConstSpacing { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("kp")]
        public string Kp { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lambda")]
        public string Lambda { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("omegaN")]
        public string OmegaN { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("tauEngine")]
        public string TauEngine { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("xi")]
        public string Xi { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lanesCount")]
        public string LanesCount { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("ccAccel")]
        public string CcAccel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("ploegKp")]
        public string PloegKp { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("ploegKd")]
        public string PloegKd { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("ploegH")]
        public string PloegH { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("flatbedKa")]
        public string FlatbedKa { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("flatbedKv")]
        public string FlatbedKv { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("flatbedKp")]
        public string FlatbedKp { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("flatbedD")]
        public string FlatbedD { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("flatbedH")]
        public string FlatbedH { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("VTypeTypeTrainType", Namespace="", AnonymousType=true)]
    public enum VTypeTypeTrainType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("RB425")]
        Rb425,
        
        [System.Xml.Serialization.XmlEnumAttribute("NGT400")]
        Ngt400,
        
        [System.Xml.Serialization.XmlEnumAttribute("NGT400_16")]
        Ngt40016,
        
        [System.Xml.Serialization.XmlEnumAttribute("ICE1")]
        Ice1,
        
        [System.Xml.Serialization.XmlEnumAttribute("ICE3")]
        Ice3,
        
        [System.Xml.Serialization.XmlEnumAttribute("REDosto7")]
        ReDosto7,
        
        [System.Xml.Serialization.XmlEnumAttribute("RB628")]
        Rb628,
        
        Freight,
        
        MireoPlusB,
        
        MireoPlusH,
        
        [System.Xml.Serialization.XmlEnumAttribute("custom")]
        Custom,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("VTypeTypeLaneChangeModel", Namespace="", AnonymousType=true)]
    public enum VTypeTypeLaneChangeModel
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("default")]
        Default,
        
        [System.Xml.Serialization.XmlEnumAttribute("DK2008")]
        Dk2008,
        
        [System.Xml.Serialization.XmlEnumAttribute("LC2013")]
        Lc2013,
        
        [System.Xml.Serialization.XmlEnumAttribute("LC2013_CC")]
        Lc2013Cc,
        
        [System.Xml.Serialization.XmlEnumAttribute("SL2015")]
        Sl2015,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("vehicleType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="VehicleType" /> class.</para>
        /// </summary>
        public VehicleType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
            this._stop = new System.Collections.ObjectModel.Collection<StopType>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("route")]
        public VehicleRouteType Route { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("routeDistribution")]
        public VehicleRouteDistributionType RouteDistribution { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StopType> _stop;
        
        [System.Xml.Serialization.XmlElementAttribute("stop")]
        public System.Collections.ObjectModel.Collection<StopType> Stop
        {
            get
            {
                return _stop;
            }
            private set
            {
                _stop = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Stop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StopSpecified
        {
            get
            {
                return (this.Stop.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("route")]
        public string Route1 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("reroute")]
        public NetFile.BoolType Reroute { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Reroute property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RerouteSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromTaz")]
        public string FromTaz { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toTaz")]
        public string ToTaz { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("via")]
        public string Via { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("depart")]
        public string Depart { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: ((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?)")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departLane")]
        public string DepartLane { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departPos")]
        public string DepartPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("departSpeed")]
        public string DepartSpeed { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departEdge")]
        public string DepartEdge { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalEdge")]
        public string ArrivalEdge { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalLane")]
        public string ArrivalLane { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalPos")]
        public string ArrivalPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalSpeed")]
        public string ArrivalSpeed { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departPosLat")]
        public string DepartPosLat { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalPosLat")]
        public string ArrivalPosLat { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("arrival")]
        public string Arrival { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("routeLength")]
        public float RouteLength { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RouteLength property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteLengthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("line")]
        public string Line { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("personNumber")]
        public string PersonNumber { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("containerNumber")]
        public string ContainerNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("speedFactor")]
        public float SpeedFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpeedFactor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpeedFactorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("insertionChecks")]
        public string InsertionChecks { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parkingBadges")]
        public string ParkingBadges { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("vehicleRouteType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RouteType))]
    public partial class VehicleRouteType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StopType> _stop;
        
        [System.Xml.Serialization.XmlElementAttribute("stop")]
        public System.Collections.ObjectModel.Collection<StopType> Stop
        {
            get
            {
                return _stop;
            }
            private set
            {
                _stop = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Stop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StopSpecified
        {
            get
            {
                return (this.Stop.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="VehicleRouteType" /> class.</para>
        /// </summary>
        public VehicleRouteType()
        {
            this._stop = new System.Collections.ObjectModel.Collection<StopType>();
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("edges")]
        public string Edges { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: ((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?)")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("exitTimes")]
        public string ExitTimes { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cost")]
        public string Cost { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("savings")]
        public string Savings { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("repeat")]
        public string Repeat { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("cycleTime")]
        public string CycleTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("probability")]
        public string Probability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("routeLength")]
        public float RouteLength { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RouteLength property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteLengthSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("stopType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StopType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="StopType" /> class.</para>
        /// </summary>
        public StopType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lane")]
        public string Lane { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("edge")]
        public string Edge { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lon")]
        public string Lon { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lat")]
        public string Lat { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("busStop")]
        public string BusStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("trainStop")]
        public string TrainStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("containerStop")]
        public string ContainerStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("chargingStation")]
        public string ChargingStation { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parkingArea")]
        public string ParkingArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("startPos")]
        public string StartPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("endPos")]
        public string EndPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("posLat")]
        public string PosLat { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("friendlyPos")]
        public NetFile.BoolType FriendlyPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FriendlyPos property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FriendlyPosSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("arrival")]
        public string Arrival { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("duration")]
        public string Duration { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("until")]
        public string Until { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("extension")]
        public string Extension { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("index")]
        public string Index { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parking")]
        public StopTypeParking Parking { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Parking property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("triggered")]
        public string Triggered { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("containerTriggered")]
        public NetFile.BoolType ContainerTriggered { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ContainerTriggered property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContainerTriggeredSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("expected")]
        public string Expected { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("permitted")]
        public string Permitted { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("expectedContainers")]
        public string ExpectedContainers { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("actType")]
        public string ActType { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("tripId")]
        public string TripId { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("split")]
        public string Split { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("join")]
        public string Join { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("line")]
        public string Line { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("speed")]
        public float Speed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Speed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpeedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("priorEdges")]
        public string PriorEdges { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("priorEdgesLength")]
        public string PriorEdgesLength { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("started")]
        public string Started { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("ended")]
        public string Ended { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("onDemand")]
        public NetFile.BoolType OnDemand { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OnDemand property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnDemandSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("jump")]
        public string Jump { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("actualArrival")]
        public string ActualArrival { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("depart")]
        public string Depart { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("collision")]
        public NetFile.BoolType Collision { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Collision property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CollisionSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StopTypeParking", Namespace="", AnonymousType=true)]
    public enum StopTypeParking
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("true")]
        True,
        
        [System.Xml.Serialization.XmlEnumAttribute("false")]
        False,
        
        [System.Xml.Serialization.XmlEnumAttribute("True")]
        True1,
        
        [System.Xml.Serialization.XmlEnumAttribute("False")]
        False1,
        
        [System.Xml.Serialization.XmlEnumAttribute("yes")]
        Yes,
        
        [System.Xml.Serialization.XmlEnumAttribute("no")]
        No,
        
        [System.Xml.Serialization.XmlEnumAttribute("on")]
        On,
        
        [System.Xml.Serialization.XmlEnumAttribute("off")]
        Off,
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        [System.Xml.Serialization.XmlEnumAttribute("x")]
        X,
        
        [System.Xml.Serialization.XmlEnumAttribute("-")]
        Empty,
        
        [System.Xml.Serialization.XmlEnumAttribute("opportunistic")]
        Opportunistic,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("vehicleRouteDistributionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VehicleRouteDistributionType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RouteDistRouteType> _route;
        
        //
        [System.Xml.Serialization.XmlElementAttribute("route")]
        public System.Collections.ObjectModel.Collection<RouteDistRouteType> Route
        {
            get
            {
                return _route;
            }
            private set
            {
                _route = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="VehicleRouteDistributionType" /> class.</para>
        /// </summary>
        public VehicleRouteDistributionType()
        {
            this._route = new System.Collections.ObjectModel.Collection<RouteDistRouteType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("last")]
        public string Last { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("routeDistRouteType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RouteDistRouteType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StopType> _stop;
        
        [System.Xml.Serialization.XmlElementAttribute("stop")]
        public System.Collections.ObjectModel.Collection<StopType> Stop
        {
            get
            {
                return _stop;
            }
            private set
            {
                _stop = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Stop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StopSpecified
        {
            get
            {
                return (this.Stop.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RouteDistRouteType" /> class.</para>
        /// </summary>
        public RouteDistRouteType()
        {
            this._stop = new System.Collections.ObjectModel.Collection<StopType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("edges")]
        public string Edges { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: ((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?)")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cost")]
        public string Cost { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("savings")]
        public string Savings { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("probability")]
        public string Probability { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("exitTimes")]
        public string ExitTimes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("refId")]
        public string RefId { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("reason")]
        public string Reason { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("replacedOnEdge")]
        public string ReplacedOnEdge { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("replacedOnIndex")]
        public string ReplacedOnIndex { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("replacedAtTime")]
        public string ReplacedAtTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("routeLength")]
        public float RouteLength { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RouteLength property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteLengthSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("flowWithoutIDType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FlowCalibratorType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FlowType))]
    public partial class FlowWithoutIdType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<VehicleRouteType> _route;
        
        [System.Xml.Serialization.XmlElementAttribute("route")]
        public System.Collections.ObjectModel.Collection<VehicleRouteType> Route
        {
            get
            {
                return _route;
            }
            private set
            {
                _route = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Route collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteSpecified
        {
            get
            {
                return (this.Route.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FlowWithoutIdType" /> class.</para>
        /// </summary>
        public FlowWithoutIdType()
        {
            this._route = new System.Collections.ObjectModel.Collection<VehicleRouteType>();
            this._routeDistribution = new System.Collections.ObjectModel.Collection<VehicleRouteDistributionType>();
            this._stop = new System.Collections.ObjectModel.Collection<StopType>();
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<VehicleRouteDistributionType> _routeDistribution;
        
        [System.Xml.Serialization.XmlElementAttribute("routeDistribution")]
        public System.Collections.ObjectModel.Collection<VehicleRouteDistributionType> RouteDistribution
        {
            get
            {
                return _routeDistribution;
            }
            private set
            {
                _routeDistribution = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RouteDistribution collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteDistributionSpecified
        {
            get
            {
                return (this.RouteDistribution.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StopType> _stop;
        
        [System.Xml.Serialization.XmlElementAttribute("stop")]
        public System.Collections.ObjectModel.Collection<StopType> Stop
        {
            get
            {
                return _stop;
            }
            private set
            {
                _stop = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Stop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StopSpecified
        {
            get
            {
                return (this.Stop.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("route")]
        public string Route1 { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromTaz")]
        public string FromTaz { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toTaz")]
        public string ToTaz { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("from")]
        public string From { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("to")]
        public string To { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("via")]
        public string Via { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromJunction")]
        public string FromJunction { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toJunction")]
        public string ToJunction { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("viaJunctions")]
        public string ViaJunctions { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("begin")]
        public string Begin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("end")]
        public string End { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: ([-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?)|((exp)\(                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                       \)).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"([-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?)|((exp)\(                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                       \))")]
        [System.Xml.Serialization.XmlAttributeAttribute("period")]
        public string Period { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("vehsPerHour")]
        public float VehsPerHour { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VehsPerHour property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VehsPerHourSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("perHour")]
        public float PerHour { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PerHour property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PerHourSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("probability")]
        public float Probability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Probability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbabilitySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("number")]
        public int Number { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Number property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: ((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?)")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departLane")]
        public string DepartLane { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departPos")]
        public string DepartPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("departSpeed")]
        public string DepartSpeed { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalLane")]
        public string ArrivalLane { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalPos")]
        public string ArrivalPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalSpeed")]
        public string ArrivalSpeed { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departPosLat")]
        public string DepartPosLat { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalPosLat")]
        public string ArrivalPosLat { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("line")]
        public string Line { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("personNumber")]
        public string PersonNumber { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("containerNumber")]
        public string ContainerNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("speedFactor")]
        public float SpeedFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpeedFactor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpeedFactorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parkingBadges")]
        public string ParkingBadges { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("insertionChecks")]
        public string InsertionChecks { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("flowIntervalType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlowIntervalType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FlowType> _flow;
        
        [System.Xml.Serialization.XmlElementAttribute("flow")]
        public System.Collections.ObjectModel.Collection<FlowType> Flow
        {
            get
            {
                return _flow;
            }
            private set
            {
                _flow = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Flow collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlowSpecified
        {
            get
            {
                return (this.Flow.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FlowIntervalType" /> class.</para>
        /// </summary>
        public FlowIntervalType()
        {
            this._flow = new System.Collections.ObjectModel.Collection<FlowType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("begin")]
        public string Begin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("end")]
        public string End { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("flowType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlowType : FlowWithoutIdType
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        ////
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("reroute")]
        public NetFile.BoolType Reroute { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Reroute property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RerouteSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departEdge")]
        public string DepartEdge { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalEdge")]
        public string ArrivalEdge { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("flowCalibratorType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlowCalibratorType : FlowWithoutIdType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// </summary>
        ////
        [System.Xml.Serialization.XmlAttributeAttribute("speed")]
        public string Speed { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tripType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TripType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StopType> _stop;
        
        [System.Xml.Serialization.XmlElementAttribute("stop")]
        public System.Collections.ObjectModel.Collection<StopType> Stop
        {
            get
            {
                return _stop;
            }
            private set
            {
                _stop = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Stop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StopSpecified
        {
            get
            {
                return (this.Stop.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TripType" /> class.</para>
        /// </summary>
        public TripType()
        {
            this._stop = new System.Collections.ObjectModel.Collection<StopType>();
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        ////
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromTaz")]
        public string FromTaz { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toTaz")]
        public string ToTaz { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("from")]
        public string From { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("to")]
        public string To { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("via")]
        public string Via { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF),                      [-+]?" +
            //+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)                      (,        " +
            //"                [-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)           " +
            //"           )?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("fromLonLat")]
        public string FromLonLat { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF),                      [-+]?" +
            //+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)                      (,        " +
            //"                [-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)           " +
            //"           )?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("toLonLat")]
        public string ToLonLat { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: (                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?")]
        [System.Xml.Serialization.XmlAttributeAttribute("viaLonLat")]
        public string ViaLonLat { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF),                      [-+]?" +
            //+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)                      (,        " +
            //"                [-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)           " +
            //"           )?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("fromXY")]
        public string FromXy { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF),                      [-+]?" +
            //+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)                      (,        " +

        [System.Xml.Serialization.XmlAttributeAttribute("toXY")]
        public string ToXy { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: (                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?")]
        [System.Xml.Serialization.XmlAttributeAttribute("viaXY")]
        public string ViaXy { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromJunction")]
        public string FromJunction { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toJunction")]
        public string ToJunction { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("viaJunctions")]
        public string ViaJunctions { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("depart")]
        public string Depart { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: ((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?)")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departLane")]
        public string DepartLane { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departPos")]
        public string DepartPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("departSpeed")]
        public string DepartSpeed { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departEdge")]
        public string DepartEdge { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalEdge")]
        public string ArrivalEdge { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalLane")]
        public string ArrivalLane { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalPos")]
        public string ArrivalPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalSpeed")]
        public string ArrivalSpeed { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departPosLat")]
        public string DepartPosLat { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalPosLat")]
        public string ArrivalPosLat { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("line")]
        public string Line { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("personNumber")]
        public string PersonNumber { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("containerNumber")]
        public string ContainerNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("speedFactor")]
        public float SpeedFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpeedFactor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpeedFactorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parkingBadges")]
        public string ParkingBadges { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("insertionChecks")]
        public string InsertionChecks { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("routeType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RouteType : VehicleRouteType
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        ////
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("vTypeDistributionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VTypeDistributionType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<VTypeType> _vType;
        
        [System.Xml.Serialization.XmlElementAttribute("vType")]
        public System.Collections.ObjectModel.Collection<VTypeType> VType
        {
            get
            {
                return _vType;
            }
            private set
            {
                _vType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VTypeSpecified
        {
            get
            {
                return (this.VType.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="VTypeDistributionType" /> class.</para>
        /// </summary>
        public VTypeDistributionType()
        {
            this._vType = new System.Collections.ObjectModel.Collection<VTypeType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        ////
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vTypes")]
        public string VTypes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("probabilities")]
        public string Probabilities { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("deterministic")]
        public int Deterministic { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Deterministic property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeterministicSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("routeDistributionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RouteDistributionType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RouteDistRouteType> _route;
        
        [System.Xml.Serialization.XmlElementAttribute("route")]
        public System.Collections.ObjectModel.Collection<RouteDistRouteType> Route
        {
            get
            {
                return _route;
            }
            private set
            {
                _route = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Route collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteSpecified
        {
            get
            {
                return (this.Route.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RouteDistributionType" /> class.</para>
        /// </summary>
        public RouteDistributionType()
        {
            this._route = new System.Collections.ObjectModel.Collection<RouteDistRouteType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        ////
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("last")]
        public string Last { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("routes")]
        public string Routes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("probabilities")]
        public string Probabilities { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("personType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PersonType : PersonBaseType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        ////
        [System.Xml.Serialization.XmlAttributeAttribute("depart")]
        public string Depart { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("personBaseType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonFlowType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonType))]
    public partial class PersonBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<PersonBaseTypePersonTrip> _personTrip;
        
        [System.Xml.Serialization.XmlElementAttribute("personTrip")]
        public System.Collections.ObjectModel.Collection<PersonBaseTypePersonTrip> PersonTrip
        {
            get
            {
                return _personTrip;
            }
            private set
            {
                _personTrip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PersonTrip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PersonTripSpecified
        {
            get
            {
                return (this.PersonTrip.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PersonBaseType" /> class.</para>
        /// </summary>
        public PersonBaseType()
        {
            this._personTrip = new System.Collections.ObjectModel.Collection<PersonBaseTypePersonTrip>();
            this._ride = new System.Collections.ObjectModel.Collection<PersonBaseTypeRide>();
            this._walk = new System.Collections.ObjectModel.Collection<PersonBaseTypeWalk>();
            this._stop = new System.Collections.ObjectModel.Collection<StopType>();
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<PersonBaseTypeRide> _ride;
        
        [System.Xml.Serialization.XmlElementAttribute("ride")]
        public System.Collections.ObjectModel.Collection<PersonBaseTypeRide> Ride
        {
            get
            {
                return _ride;
            }
            private set
            {
                _ride = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Ride collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RideSpecified
        {
            get
            {
                return (this.Ride.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<PersonBaseTypeWalk> _walk;
        
        [System.Xml.Serialization.XmlElementAttribute("walk")]
        public System.Collections.ObjectModel.Collection<PersonBaseTypeWalk> Walk
        {
            get
            {
                return _walk;
            }
            private set
            {
                _walk = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Walk collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WalkSpecified
        {
            get
            {
                return (this.Walk.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StopType> _stop;
        
        [System.Xml.Serialization.XmlElementAttribute("stop")]
        public System.Collections.ObjectModel.Collection<StopType> Stop
        {
            get
            {
                return _stop;
            }
            private set
            {
                _stop = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Stop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StopSpecified
        {
            get
            {
                return (this.Stop.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        ////
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("arrival")]
        public string Arrival { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departPos")]
        public string DepartPos { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalPos")]
        public string ArrivalPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: ((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?)")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("modes")]
        public string Modes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vTypes")]
        public string VTypes { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("speedFactor")]
        public float SpeedFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpeedFactor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpeedFactorSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PersonBaseTypePersonTrip", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PersonBaseTypePersonTrip
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PersonBaseTypePersonTrip" /> class.</para>
        /// </summary>
        public PersonBaseTypePersonTrip()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("from")]
        public string From { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("to")]
        public string To { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromTaz")]
        public string FromTaz { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toTaz")]
        public string ToTaz { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF),                      [-+]?" +
            //+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)                      (,        " +
            //"                [-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)           " +
            //"           )?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("fromXY")]
        public string FromXy { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF),                      [-+]?" +
            //+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)                      (,        " +
            //"                [-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)           " +
            //"           )?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("toXY")]
        public string ToXy { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF),                      [-+]?" +
            //+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)                      (,        " +
           // "                [-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)           " +
           // "           )?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("fromLonLat")]
        public string FromLonLat { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF),                      [-+]?" +
            //+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)                      (,        " +
            //"                [-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)           " +
            //"           )?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("toLonLat")]
        public string ToLonLat { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromJunction")]
        public string FromJunction { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toJunction")]
        public string ToJunction { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("viaJunctions")]
        public string ViaJunctions { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("busStop")]
        public string BusStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("trainStop")]
        public string TrainStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parkingArea")]
        public string ParkingArea { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("containerStop")]
        public string ContainerStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("chargingStation")]
        public string ChargingStation { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("modes")]
        public string Modes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vTypes")]
        public string VTypes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departPos")]
        public string DepartPos { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departPosLat")]
        public string DepartPosLat { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalPos")]
        public string ArrivalPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("walkFactor")]
        public float WalkFactor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WalkFactor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WalkFactorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("costs")]
        public string Costs { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("group")]
        public string Group { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lines")]
        public string Lines { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PersonBaseTypeRide", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PersonBaseTypeRide
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PersonBaseTypeRide" /> class.</para>
        /// </summary>
        public PersonBaseTypeRide()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("from")]
        public string From { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("to")]
        public string To { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF),                      [-+]?" +
            //+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)                      (,        " +
            //"                [-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)           " +
            //"           )?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("fromLonLat")]
        public string FromLonLat { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF),                      [-+]?" +
            //+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)                      (,        " +
            //"                [-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)           " +
            //"           )?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("toLonLat")]
        public string ToLonLat { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF),                      [-+]?" +
            //+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)                      (,        " +
            //"                [-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)           " +
            //"           )?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("fromXY")]
        public string FromXy { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
   
        [System.Xml.Serialization.XmlAttributeAttribute("toXY")]
        public string ToXy { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("busStop")]
        public string BusStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("trainStop")]
        public string TrainStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parkingArea")]
        public string ParkingArea { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("containerStop")]
        public string ContainerStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("chargingStation")]
        public string ChargingStation { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lines")]
        public string Lines { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalPos")]
        public string ArrivalPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cost")]
        public string Cost { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("intended")]
        public string Intended { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("depart")]
        public string Depart { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("routeLength")]
        public string RouteLength { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("group")]
        public string Group { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vehicle")]
        public string Vehicle { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]

        [System.Xml.Serialization.XmlAttributeAttribute("started")]
        public string Started { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]

        [System.Xml.Serialization.XmlAttributeAttribute("ended")]
        public string Ended { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PersonBaseTypeWalk", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PersonBaseTypeWalk
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PersonBaseTypeWalk" /> class.</para>
        /// </summary>
        public PersonBaseTypeWalk()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("route")]
        public string Route { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("edges")]
        public string Edges { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("from")]
        public string From { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("to")]
        public string To { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromTaz")]
        public string FromTaz { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toTaz")]
        public string ToTaz { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF),                      [-+]?" +
            //+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)                      (,        " +

        [System.Xml.Serialization.XmlAttributeAttribute("fromXY")]
        public string FromXy { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF),                      [-+]?" +

        [System.Xml.Serialization.XmlAttributeAttribute("toXY")]
        public string ToXy { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF),                      [-+]?" +
            //+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)                      (,        " +

        [System.Xml.Serialization.XmlAttributeAttribute("fromLonLat")]
        public string FromLonLat { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                      [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      (,                        [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                      )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF),                      [-+]?" +

        [System.Xml.Serialization.XmlAttributeAttribute("toLonLat")]
        public string ToLonLat { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromJunction")]
        public string FromJunction { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toJunction")]
        public string ToJunction { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("viaJunctions")]
        public string ViaJunctions { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("busStop")]
        public string BusStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("trainStop")]
        public string TrainStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parkingArea")]
        public string ParkingArea { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("containerStop")]
        public string ContainerStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("chargingStation")]
        public string ChargingStation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("speed")]
        public float Speed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Speed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpeedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("duration")]
        public float Duration { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Duration property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DurationSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departPos")]
        public string DepartPos { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departPosLat")]
        public string DepartPosLat { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departLane")]
        public string DepartLane { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalPos")]
        public string ArrivalPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cost")]
        public string Cost { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("routeLength")]
        public string RouteLength { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("exitTimes")]
        public string ExitTimes { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("started")]
        public string Started { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("ended")]
        public string Ended { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("personFlowType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PersonFlowType : PersonBaseType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("begin")]
        public string Begin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("end")]
        public string End { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: ([-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?)|((exp)\(                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                       \)).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"([-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?)|((exp)\(                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                       \))")]
        [System.Xml.Serialization.XmlAttributeAttribute("period")]
        public string Period { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("vehsPerHour")]
        public float VehsPerHour { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VehsPerHour property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VehsPerHourSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("personsPerHour")]
        public float PersonsPerHour { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PersonsPerHour property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PersonsPerHourSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("perHour")]
        public float PerHour { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PerHour property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PerHourSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("probability")]
        public float Probability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Probability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbabilitySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("number")]
        public int Number { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Number property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("containerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContainerType : ContainerBaseType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("depart")]
        public string Depart { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("containerBaseType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContainerFlowType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContainerType))]
    public partial class ContainerBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ContainerBaseTypeTransport> _transport;
        
        [System.Xml.Serialization.XmlElementAttribute("transport")]
        public System.Collections.ObjectModel.Collection<ContainerBaseTypeTransport> Transport
        {
            get
            {
                return _transport;
            }
            private set
            {
                _transport = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Transport collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransportSpecified
        {
            get
            {
                return (this.Transport.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ContainerBaseType" /> class.</para>
        /// </summary>
        public ContainerBaseType()
        {
            this._transport = new System.Collections.ObjectModel.Collection<ContainerBaseTypeTransport>();
            this._tranship = new System.Collections.ObjectModel.Collection<ContainerBaseTypeTranship>();
            this._stop = new System.Collections.ObjectModel.Collection<StopType>();
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ContainerBaseTypeTranship> _tranship;
        
        [System.Xml.Serialization.XmlElementAttribute("tranship")]
        public System.Collections.ObjectModel.Collection<ContainerBaseTypeTranship> Tranship
        {
            get
            {
                return _tranship;
            }
            private set
            {
                _tranship = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Tranship collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TranshipSpecified
        {
            get
            {
                return (this.Tranship.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StopType> _stop;
        
        [System.Xml.Serialization.XmlElementAttribute("stop")]
        public System.Collections.ObjectModel.Collection<StopType> Stop
        {
            get
            {
                return _stop;
            }
            private set
            {
                _stop = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Stop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StopSpecified
        {
            get
            {
                return (this.Stop.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("arrival")]
        public float Arrival { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Arrival property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ArrivalSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("departPos")]
        public string DepartPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: ((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?)")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ContainerBaseTypeTransport", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContainerBaseTypeTransport
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("from")]
        public string From { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("to")]
        public string To { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromTaz")]
        public string FromTaz { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toTaz")]
        public string ToTaz { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromJunction")]
        public string FromJunction { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toJunction")]
        public string ToJunction { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("busStop")]
        public string BusStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("trainStop")]
        public string TrainStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parkingArea")]
        public string ParkingArea { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("containerStop")]
        public string ContainerStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("chargingStation")]
        public string ChargingStation { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lines")]
        public string Lines { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalPos")]
        public string ArrivalPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("cost")]
        public string Cost { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("intended")]
        public string Intended { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("depart")]
        public string Depart { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("routeLength")]
        public string RouteLength { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("group")]
        public string Group { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vehicle")]
        public string Vehicle { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("started")]
        public string Started { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("ended")]
        public string Ended { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ContainerBaseTypeTranship", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContainerBaseTypeTranship
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("edges")]
        public string Edges { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("from")]
        public string From { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("to")]
        public string To { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromTaz")]
        public string FromTaz { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toTaz")]
        public string ToTaz { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fromJunction")]
        public string FromJunction { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("toJunction")]
        public string ToJunction { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("busStop")]
        public string BusStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("trainStop")]
        public string TrainStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parkingArea")]
        public string ParkingArea { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("containerStop")]
        public string ContainerStop { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("chargingStation")]
        public string ChargingStation { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("speed")]
        public float Speed { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Speed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpeedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("duration")]
        public float Duration { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Duration property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DurationSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("departPos")]
        public string DepartPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("arrivalPos")]
        public string ArrivalPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("started")]
        public string Started { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// <para xml:lang="en">Maximum inclusive value: -1.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("ended")]
        public string Ended { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("containerFlowType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContainerFlowType : ContainerBaseType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("begin")]
        public string Begin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("end")]
        public string End { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: ([-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?)|((exp)\(                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                       \)).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"([-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?)|((exp)\(                         [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                       \))")]
        [System.Xml.Serialization.XmlAttributeAttribute("period")]
        public string Period { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("containersPerHour")]
        public float ContainersPerHour { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ContainersPerHour property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContainersPerHourSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("perHour")]
        public float PerHour { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PerHour property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PerHourSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("probability")]
        public float Probability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Probability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbabilitySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("number")]
        public int Number { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Number property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("additionalType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("additional", Namespace="")]
    public partial class AdditionalType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.LocationType> _location;
        
        [System.Xml.Serialization.XmlElementAttribute("location")]
        public System.Collections.ObjectModel.Collection<NetFile.LocationType> Location
        {
            get
            {
                return _location;
            }
            private set
            {
                _location = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Location collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LocationSpecified
        {
            get
            {
                return (this.Location.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AdditionalType" /> class.</para>
        /// </summary>
        public AdditionalType()
        {
            this._location = new System.Collections.ObjectModel.Collection<NetFile.LocationType>();
            this._vTypeProbe = new System.Collections.ObjectModel.Collection<VTypeProbeType>();
            this._e1Detector = new System.Collections.ObjectModel.Collection<E1DetectorType>();
            this._inductionLoop = new System.Collections.ObjectModel.Collection<E1DetectorType>();
            this._e2Detector = new System.Collections.ObjectModel.Collection<E2DetectorType>();
            this._laneAreaDetector = new System.Collections.ObjectModel.Collection<E2DetectorType>();
            this._e3Detector = new System.Collections.ObjectModel.Collection<E3DetectorType>();
            this._entryExitDetector = new System.Collections.ObjectModel.Collection<E3DetectorType>();
            this._edgeData = new System.Collections.ObjectModel.Collection<MeandataType>();
            this._laneData = new System.Collections.ObjectModel.Collection<MeandataType>();
            this._timedEvent = new System.Collections.ObjectModel.Collection<TimedEventType>();
            this._tlLogic = new System.Collections.ObjectModel.Collection<TlLogicAdditionalType>();
            this._waut = new System.Collections.ObjectModel.Collection<WautType>();
            this._wautJunction = new System.Collections.ObjectModel.Collection<WautJunctionType>();
            this._variableSpeedSign = new System.Collections.ObjectModel.Collection<VariableSpeedSignType>();
            this._routeProbe = new System.Collections.ObjectModel.Collection<RouteProbeType>();
            this._rerouter = new System.Collections.ObjectModel.Collection<RerouterType>();
            this._instantInductionLoop = new System.Collections.ObjectModel.Collection<InstantInductionLoopType>();
            this._busStop = new System.Collections.ObjectModel.Collection<BusStopType>();
            this._trainStop = new System.Collections.ObjectModel.Collection<BusStopType>();
            this._containerStop = new System.Collections.ObjectModel.Collection<ContainerStopType>();
            this._chargingStation = new System.Collections.ObjectModel.Collection<ChargingStationType>();
            this._overheadWireSegment = new System.Collections.ObjectModel.Collection<OverheadWireSegmentType>();
            this._tractionSubstation = new System.Collections.ObjectModel.Collection<TractionSubstationType>();
            this._overheadWireClamp = new System.Collections.ObjectModel.Collection<OverheadWireClampType>();
            this._overheadWire = new System.Collections.ObjectModel.Collection<OverheadWireType>();
            this._parkingArea = new System.Collections.ObjectModel.Collection<ParkingAreaType>();
            this._calibrator = new System.Collections.ObjectModel.Collection<CalibratorType>();
            this._vaporizer = new System.Collections.ObjectModel.Collection<VaporizerType>();
            this._railSignalConstraints = new System.Collections.ObjectModel.Collection<RailSignalConstraintsType>();
            this._deadlock = new System.Collections.ObjectModel.Collection<DeadlockType>();
            this._vTypeDistribution = new System.Collections.ObjectModel.Collection<NetFile.VTypeDistributionType>();
            this._routeDistribution = new System.Collections.ObjectModel.Collection<NetFile.RouteDistributionType>();
            this._vType = new System.Collections.ObjectModel.Collection<NetFile.VTypeType>();
            this._route = new System.Collections.ObjectModel.Collection<NetFile.RouteType>();
            this._vehicle = new System.Collections.ObjectModel.Collection<NetFile.VehicleType>();
            this._flow = new System.Collections.ObjectModel.Collection<NetFile.FlowType>();
            this._trip = new System.Collections.ObjectModel.Collection<NetFile.TripType>();
            this._person = new System.Collections.ObjectModel.Collection<NetFile.PersonType>();
            this._personFlow = new System.Collections.ObjectModel.Collection<NetFile.PersonFlowType>();
            this._container = new System.Collections.ObjectModel.Collection<NetFile.ContainerType>();
            this._containerFlow = new System.Collections.ObjectModel.Collection<NetFile.ContainerFlowType>();
            this._interval = new System.Collections.ObjectModel.Collection<NetFile.FlowIntervalType>();
            this._poly = new System.Collections.ObjectModel.Collection<PolygonType>();
            this._poi = new System.Collections.ObjectModel.Collection<PoiType>();
            this._taz = new System.Collections.ObjectModel.Collection<NetFile.TazType>();
            this._type = new System.Collections.ObjectModel.Collection<NetFile.TypeType>();
            this._include = new System.Collections.ObjectModel.Collection<NetFile.IncludeType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<VTypeProbeType> _vTypeProbe;
        
        [System.Xml.Serialization.XmlElementAttribute("vTypeProbe")]
        public System.Collections.ObjectModel.Collection<VTypeProbeType> VTypeProbe
        {
            get
            {
                return _vTypeProbe;
            }
            private set
            {
                _vTypeProbe = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VTypeProbe collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VTypeProbeSpecified
        {
            get
            {
                return (this.VTypeProbe.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<E1DetectorType> _e1Detector;
        
        [System.Xml.Serialization.XmlElementAttribute("e1Detector")]
        public System.Collections.ObjectModel.Collection<E1DetectorType> E1Detector
        {
            get
            {
                return _e1Detector;
            }
            private set
            {
                _e1Detector = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the E1Detector collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool E1DetectorSpecified
        {
            get
            {
                return (this.E1Detector.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<E1DetectorType> _inductionLoop;
        
        [System.Xml.Serialization.XmlElementAttribute("inductionLoop")]
        public System.Collections.ObjectModel.Collection<E1DetectorType> InductionLoop
        {
            get
            {
                return _inductionLoop;
            }
            private set
            {
                _inductionLoop = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InductionLoop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InductionLoopSpecified
        {
            get
            {
                return (this.InductionLoop.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<E2DetectorType> _e2Detector;
        
        [System.Xml.Serialization.XmlElementAttribute("e2Detector")]
        public System.Collections.ObjectModel.Collection<E2DetectorType> E2Detector
        {
            get
            {
                return _e2Detector;
            }
            private set
            {
                _e2Detector = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the E2Detector collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool E2DetectorSpecified
        {
            get
            {
                return (this.E2Detector.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<E2DetectorType> _laneAreaDetector;
        
        [System.Xml.Serialization.XmlElementAttribute("laneAreaDetector")]
        public System.Collections.ObjectModel.Collection<E2DetectorType> LaneAreaDetector
        {
            get
            {
                return _laneAreaDetector;
            }
            private set
            {
                _laneAreaDetector = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LaneAreaDetector collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LaneAreaDetectorSpecified
        {
            get
            {
                return (this.LaneAreaDetector.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<E3DetectorType> _e3Detector;
        
        [System.Xml.Serialization.XmlElementAttribute("e3Detector")]
        public System.Collections.ObjectModel.Collection<E3DetectorType> E3Detector
        {
            get
            {
                return _e3Detector;
            }
            private set
            {
                _e3Detector = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the E3Detector collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool E3DetectorSpecified
        {
            get
            {
                return (this.E3Detector.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<E3DetectorType> _entryExitDetector;
        
        [System.Xml.Serialization.XmlElementAttribute("entryExitDetector")]
        public System.Collections.ObjectModel.Collection<E3DetectorType> EntryExitDetector
        {
            get
            {
                return _entryExitDetector;
            }
            private set
            {
                _entryExitDetector = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EntryExitDetector collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EntryExitDetectorSpecified
        {
            get
            {
                return (this.EntryExitDetector.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MeandataType> _edgeData;
        
        [System.Xml.Serialization.XmlElementAttribute("edgeData")]
        public System.Collections.ObjectModel.Collection<MeandataType> EdgeData
        {
            get
            {
                return _edgeData;
            }
            private set
            {
                _edgeData = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the EdgeData collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EdgeDataSpecified
        {
            get
            {
                return (this.EdgeData.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MeandataType> _laneData;
        
        [System.Xml.Serialization.XmlElementAttribute("laneData")]
        public System.Collections.ObjectModel.Collection<MeandataType> LaneData
        {
            get
            {
                return _laneData;
            }
            private set
            {
                _laneData = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the LaneData collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LaneDataSpecified
        {
            get
            {
                return (this.LaneData.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TimedEventType> _timedEvent;
        
        [System.Xml.Serialization.XmlElementAttribute("timedEvent")]
        public System.Collections.ObjectModel.Collection<TimedEventType> TimedEvent
        {
            get
            {
                return _timedEvent;
            }
            private set
            {
                _timedEvent = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TimedEvent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimedEventSpecified
        {
            get
            {
                return (this.TimedEvent.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TlLogicAdditionalType> _tlLogic;
        
        [System.Xml.Serialization.XmlElementAttribute("tlLogic")]
        public System.Collections.ObjectModel.Collection<TlLogicAdditionalType> TlLogic
        {
            get
            {
                return _tlLogic;
            }
            private set
            {
                _tlLogic = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TlLogic collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TlLogicSpecified
        {
            get
            {
                return (this.TlLogic.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<WautType> _waut;
        
        [System.Xml.Serialization.XmlElementAttribute("WAUT")]
        public System.Collections.ObjectModel.Collection<WautType> Waut
        {
            get
            {
                return _waut;
            }
            private set
            {
                _waut = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Waut collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WautSpecified
        {
            get
            {
                return (this.Waut.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<WautJunctionType> _wautJunction;
        
        [System.Xml.Serialization.XmlElementAttribute("wautJunction")]
        public System.Collections.ObjectModel.Collection<WautJunctionType> WautJunction
        {
            get
            {
                return _wautJunction;
            }
            private set
            {
                _wautJunction = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the WautJunction collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WautJunctionSpecified
        {
            get
            {
                return (this.WautJunction.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<VariableSpeedSignType> _variableSpeedSign;
        
        [System.Xml.Serialization.XmlElementAttribute("variableSpeedSign")]
        public System.Collections.ObjectModel.Collection<VariableSpeedSignType> VariableSpeedSign
        {
            get
            {
                return _variableSpeedSign;
            }
            private set
            {
                _variableSpeedSign = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VariableSpeedSign collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VariableSpeedSignSpecified
        {
            get
            {
                return (this.VariableSpeedSign.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RouteProbeType> _routeProbe;
        
        [System.Xml.Serialization.XmlElementAttribute("routeProbe")]
        public System.Collections.ObjectModel.Collection<RouteProbeType> RouteProbe
        {
            get
            {
                return _routeProbe;
            }
            private set
            {
                _routeProbe = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RouteProbe collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteProbeSpecified
        {
            get
            {
                return (this.RouteProbe.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RerouterType> _rerouter;
        
        [System.Xml.Serialization.XmlElementAttribute("rerouter")]
        public System.Collections.ObjectModel.Collection<RerouterType> Rerouter
        {
            get
            {
                return _rerouter;
            }
            private set
            {
                _rerouter = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Rerouter collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RerouterSpecified
        {
            get
            {
                return (this.Rerouter.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<InstantInductionLoopType> _instantInductionLoop;
        
        [System.Xml.Serialization.XmlElementAttribute("instantInductionLoop")]
        public System.Collections.ObjectModel.Collection<InstantInductionLoopType> InstantInductionLoop
        {
            get
            {
                return _instantInductionLoop;
            }
            private set
            {
                _instantInductionLoop = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InstantInductionLoop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InstantInductionLoopSpecified
        {
            get
            {
                return (this.InstantInductionLoop.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<BusStopType> _busStop;
        
        [System.Xml.Serialization.XmlElementAttribute("busStop")]
        public System.Collections.ObjectModel.Collection<BusStopType> BusStop
        {
            get
            {
                return _busStop;
            }
            private set
            {
                _busStop = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BusStop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BusStopSpecified
        {
            get
            {
                return (this.BusStop.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<BusStopType> _trainStop;
        
        [System.Xml.Serialization.XmlElementAttribute("trainStop")]
        public System.Collections.ObjectModel.Collection<BusStopType> TrainStop
        {
            get
            {
                return _trainStop;
            }
            private set
            {
                _trainStop = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TrainStop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrainStopSpecified
        {
            get
            {
                return (this.TrainStop.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ContainerStopType> _containerStop;
        
        [System.Xml.Serialization.XmlElementAttribute("containerStop")]
        public System.Collections.ObjectModel.Collection<ContainerStopType> ContainerStop
        {
            get
            {
                return _containerStop;
            }
            private set
            {
                _containerStop = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ContainerStop collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContainerStopSpecified
        {
            get
            {
                return (this.ContainerStop.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ChargingStationType> _chargingStation;
        
        [System.Xml.Serialization.XmlElementAttribute("chargingStation")]
        public System.Collections.ObjectModel.Collection<ChargingStationType> ChargingStation
        {
            get
            {
                return _chargingStation;
            }
            private set
            {
                _chargingStation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ChargingStation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChargingStationSpecified
        {
            get
            {
                return (this.ChargingStation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OverheadWireSegmentType> _overheadWireSegment;
        
        [System.Xml.Serialization.XmlElementAttribute("overheadWireSegment")]
        public System.Collections.ObjectModel.Collection<OverheadWireSegmentType> OverheadWireSegment
        {
            get
            {
                return _overheadWireSegment;
            }
            private set
            {
                _overheadWireSegment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OverheadWireSegment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OverheadWireSegmentSpecified
        {
            get
            {
                return (this.OverheadWireSegment.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TractionSubstationType> _tractionSubstation;
        
        [System.Xml.Serialization.XmlElementAttribute("tractionSubstation")]
        public System.Collections.ObjectModel.Collection<TractionSubstationType> TractionSubstation
        {
            get
            {
                return _tractionSubstation;
            }
            private set
            {
                _tractionSubstation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TractionSubstation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TractionSubstationSpecified
        {
            get
            {
                return (this.TractionSubstation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OverheadWireClampType> _overheadWireClamp;
        
        [System.Xml.Serialization.XmlElementAttribute("overheadWireClamp")]
        public System.Collections.ObjectModel.Collection<OverheadWireClampType> OverheadWireClamp
        {
            get
            {
                return _overheadWireClamp;
            }
            private set
            {
                _overheadWireClamp = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OverheadWireClamp collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OverheadWireClampSpecified
        {
            get
            {
                return (this.OverheadWireClamp.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OverheadWireType> _overheadWire;
        
        [System.Xml.Serialization.XmlElementAttribute("overheadWire")]
        public System.Collections.ObjectModel.Collection<OverheadWireType> OverheadWire
        {
            get
            {
                return _overheadWire;
            }
            private set
            {
                _overheadWire = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OverheadWire collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OverheadWireSpecified
        {
            get
            {
                return (this.OverheadWire.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ParkingAreaType> _parkingArea;
        
        [System.Xml.Serialization.XmlElementAttribute("parkingArea")]
        public System.Collections.ObjectModel.Collection<ParkingAreaType> ParkingArea
        {
            get
            {
                return _parkingArea;
            }
            private set
            {
                _parkingArea = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ParkingArea collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingAreaSpecified
        {
            get
            {
                return (this.ParkingArea.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<CalibratorType> _calibrator;
        
        [System.Xml.Serialization.XmlElementAttribute("calibrator")]
        public System.Collections.ObjectModel.Collection<CalibratorType> Calibrator
        {
            get
            {
                return _calibrator;
            }
            private set
            {
                _calibrator = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Calibrator collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CalibratorSpecified
        {
            get
            {
                return (this.Calibrator.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<VaporizerType> _vaporizer;
        
        [System.Xml.Serialization.XmlElementAttribute("vaporizer")]
        public System.Collections.ObjectModel.Collection<VaporizerType> Vaporizer
        {
            get
            {
                return _vaporizer;
            }
            private set
            {
                _vaporizer = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Vaporizer collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VaporizerSpecified
        {
            get
            {
                return (this.Vaporizer.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RailSignalConstraintsType> _railSignalConstraints;
        
        [System.Xml.Serialization.XmlElementAttribute("railSignalConstraints")]
        public System.Collections.ObjectModel.Collection<RailSignalConstraintsType> RailSignalConstraints
        {
            get
            {
                return _railSignalConstraints;
            }
            private set
            {
                _railSignalConstraints = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RailSignalConstraints collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RailSignalConstraintsSpecified
        {
            get
            {
                return (this.RailSignalConstraints.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DeadlockType> _deadlock;
        
        [System.Xml.Serialization.XmlElementAttribute("deadlock")]
        public System.Collections.ObjectModel.Collection<DeadlockType> Deadlock
        {
            get
            {
                return _deadlock;
            }
            private set
            {
                _deadlock = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Deadlock collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeadlockSpecified
        {
            get
            {
                return (this.Deadlock.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.VTypeDistributionType> _vTypeDistribution;
        
        [System.Xml.Serialization.XmlElementAttribute("vTypeDistribution")]
        public System.Collections.ObjectModel.Collection<NetFile.VTypeDistributionType> VTypeDistribution
        {
            get
            {
                return _vTypeDistribution;
            }
            private set
            {
                _vTypeDistribution = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VTypeDistribution collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VTypeDistributionSpecified
        {
            get
            {
                return (this.VTypeDistribution.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.RouteDistributionType> _routeDistribution;
        
        [System.Xml.Serialization.XmlElementAttribute("routeDistribution")]
        public System.Collections.ObjectModel.Collection<NetFile.RouteDistributionType> RouteDistribution
        {
            get
            {
                return _routeDistribution;
            }
            private set
            {
                _routeDistribution = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RouteDistribution collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteDistributionSpecified
        {
            get
            {
                return (this.RouteDistribution.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.VTypeType> _vType;
        
        [System.Xml.Serialization.XmlElementAttribute("vType")]
        public System.Collections.ObjectModel.Collection<NetFile.VTypeType> VType
        {
            get
            {
                return _vType;
            }
            private set
            {
                _vType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the VType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VTypeSpecified
        {
            get
            {
                return (this.VType.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.RouteType> _route;
        
        [System.Xml.Serialization.XmlElementAttribute("route")]
        public System.Collections.ObjectModel.Collection<NetFile.RouteType> Route
        {
            get
            {
                return _route;
            }
            private set
            {
                _route = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Route collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteSpecified
        {
            get
            {
                return (this.Route.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.VehicleType> _vehicle;
        
        [System.Xml.Serialization.XmlElementAttribute("vehicle")]
        public System.Collections.ObjectModel.Collection<NetFile.VehicleType> Vehicle
        {
            get
            {
                return _vehicle;
            }
            private set
            {
                _vehicle = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Vehicle collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VehicleSpecified
        {
            get
            {
                return (this.Vehicle.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.FlowType> _flow;
        
        [System.Xml.Serialization.XmlElementAttribute("flow")]
        public System.Collections.ObjectModel.Collection<NetFile.FlowType> Flow
        {
            get
            {
                return _flow;
            }
            private set
            {
                _flow = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Flow collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlowSpecified
        {
            get
            {
                return (this.Flow.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.TripType> _trip;
        
        [System.Xml.Serialization.XmlElementAttribute("trip")]
        public System.Collections.ObjectModel.Collection<NetFile.TripType> Trip
        {
            get
            {
                return _trip;
            }
            private set
            {
                _trip = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Trip collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TripSpecified
        {
            get
            {
                return (this.Trip.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.PersonType> _person;
        
        [System.Xml.Serialization.XmlElementAttribute("person")]
        public System.Collections.ObjectModel.Collection<NetFile.PersonType> Person
        {
            get
            {
                return _person;
            }
            private set
            {
                _person = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Person collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PersonSpecified
        {
            get
            {
                return (this.Person.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.PersonFlowType> _personFlow;
        
        [System.Xml.Serialization.XmlElementAttribute("personFlow")]
        public System.Collections.ObjectModel.Collection<NetFile.PersonFlowType> PersonFlow
        {
            get
            {
                return _personFlow;
            }
            private set
            {
                _personFlow = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PersonFlow collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PersonFlowSpecified
        {
            get
            {
                return (this.PersonFlow.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ContainerType> _container;
        
        [System.Xml.Serialization.XmlElementAttribute("container")]
        public System.Collections.ObjectModel.Collection<NetFile.ContainerType> Container
        {
            get
            {
                return _container;
            }
            private set
            {
                _container = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Container collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContainerSpecified
        {
            get
            {
                return (this.Container.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ContainerFlowType> _containerFlow;
        
        [System.Xml.Serialization.XmlElementAttribute("containerFlow")]
        public System.Collections.ObjectModel.Collection<NetFile.ContainerFlowType> ContainerFlow
        {
            get
            {
                return _containerFlow;
            }
            private set
            {
                _containerFlow = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ContainerFlow collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContainerFlowSpecified
        {
            get
            {
                return (this.ContainerFlow.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.FlowIntervalType> _interval;
        
        [System.Xml.Serialization.XmlElementAttribute("interval")]
        public System.Collections.ObjectModel.Collection<NetFile.FlowIntervalType> Interval
        {
            get
            {
                return _interval;
            }
            private set
            {
                _interval = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Interval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalSpecified
        {
            get
            {
                return (this.Interval.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<PolygonType> _poly;
        
        [System.Xml.Serialization.XmlElementAttribute("poly")]
        public System.Collections.ObjectModel.Collection<PolygonType> Poly
        {
            get
            {
                return _poly;
            }
            private set
            {
                _poly = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Poly collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PolySpecified
        {
            get
            {
                return (this.Poly.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<PoiType> _poi;
        
        [System.Xml.Serialization.XmlElementAttribute("poi")]
        public System.Collections.ObjectModel.Collection<PoiType> Poi
        {
            get
            {
                return _poi;
            }
            private set
            {
                _poi = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Poi collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PoiSpecified
        {
            get
            {
                return (this.Poi.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.TazType> _taz;
        
        [System.Xml.Serialization.XmlElementAttribute("taz")]
        public System.Collections.ObjectModel.Collection<NetFile.TazType> Taz
        {
            get
            {
                return _taz;
            }
            private set
            {
                _taz = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Taz collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TazSpecified
        {
            get
            {
                return (this.Taz.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.TypeType> _type;
        
        [System.Xml.Serialization.XmlElementAttribute("type")]
        public System.Collections.ObjectModel.Collection<NetFile.TypeType> Type
        {
            get
            {
                return _type;
            }
            private set
            {
                _type = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Type collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return (this.Type.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.IncludeType> _include;
        
        [System.Xml.Serialization.XmlElementAttribute("include")]
        public System.Collections.ObjectModel.Collection<NetFile.IncludeType> Include
        {
            get
            {
                return _include;
            }
            private set
            {
                _include = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Include collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncludeSpecified
        {
            get
            {
                return (this.Include.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("vTypeProbeType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VTypeProbeType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="VTypeProbeType" /> class.</para>
        /// </summary>
        public VTypeProbeType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        ////
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("period")]
        public float Period { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Period property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeriodSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("freq")]
        public float Freq { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Freq property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreqSpecified { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("file")]
        public string File { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("e1DetectorType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class E1DetectorType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="E1DetectorType" /> class.</para>
        /// </summary>
        public E1DetectorType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^\t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^\\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("lane")]
        public string Lane { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("pos")]
        public string Pos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public float Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Length property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("period")]
        public float Period { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Period property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeriodSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("freq")]
        public float Freq { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Freq property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreqSpecified { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("file")]
        public string File { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vTypes")]
        public string VTypes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("nextEdges")]
        public string NextEdges { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("detectPersons")]
        public string DetectPersons { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("friendlyPos")]
        public NetFile.BoolType FriendlyPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FriendlyPos property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FriendlyPosSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("e2DetectorType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class E2DetectorType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="E2DetectorType" /> class.</para>
        /// </summary>
        public E2DetectorType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^\t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^\\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lane")]
        public string Lane { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lanes")]
        public string Lanes { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("file")]
        public string File { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("pos")]
        public string Pos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("endPos")]
        public string EndPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public string Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("period")]
        public float Period { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Period property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeriodSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("freq")]
        public float Freq { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Freq property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreqSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("tl")]
        public string Tl { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("to")]
        public string To { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("cont")]
        public NetFile.BoolType Cont { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cont property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("timeThreshold")]
        public string TimeThreshold { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("speedThreshold")]
        public string SpeedThreshold { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("jamThreshold")]
        public string JamThreshold { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vTypes")]
        public string VTypes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("nextEdges")]
        public string NextEdges { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("detectPersons")]
        public string DetectPersons { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("friendlyPos")]
        public NetFile.BoolType FriendlyPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FriendlyPos property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FriendlyPosSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("show")]
        public NetFile.BoolType Show { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Show property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("e3DetectorType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class E3DetectorType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="E3DetectorType" /> class.</para>
        /// </summary>
        public E3DetectorType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
            this._detEntry = new System.Collections.ObjectModel.Collection<DetEntryExitType>();
            this._detExit = new System.Collections.ObjectModel.Collection<DetEntryExitType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DetEntryExitType> _detEntry;
        
        [System.Xml.Serialization.XmlElementAttribute("detEntry")]
        public System.Collections.ObjectModel.Collection<DetEntryExitType> DetEntry
        {
            get
            {
                return _detEntry;
            }
            private set
            {
                _detEntry = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DetEntry collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetEntrySpecified
        {
            get
            {
                return (this.DetEntry.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DetEntryExitType> _detExit;
        
        [System.Xml.Serialization.XmlElementAttribute("detExit")]
        public System.Collections.ObjectModel.Collection<DetEntryExitType> DetExit
        {
            get
            {
                return _detExit;
            }
            private set
            {
                _detExit = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DetExit collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetExitSpecified
        {
            get
            {
                return (this.DetExit.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^\t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^\\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("period")]
        public float Period { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Period property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeriodSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("freq")]
        public float Freq { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Freq property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreqSpecified { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("file")]
        public string File { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("timeThreshold")]
        public string TimeThreshold { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("speedThreshold")]
        public float SpeedThreshold { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpeedThreshold property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpeedThresholdSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vTypes")]
        public string VTypes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("nextEdges")]
        public string NextEdges { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("detectPersons")]
        public string DetectPersons { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("openEntry")]
        public NetFile.BoolType OpenEntry { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OpenEntry property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OpenEntrySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("expectArrival")]
        public NetFile.BoolType ExpectArrival { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExpectArrival property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpectArrivalSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("pos")]
        public string Pos { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("detEntryExitType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetEntryExitType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DetEntryExitType" /> class.</para>
        /// </summary>
        public DetEntryExitType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("lane")]
        public string Lane { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("pos")]
        public string Pos { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("friendlyPos")]
        public NetFile.BoolType FriendlyPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FriendlyPos property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FriendlyPosSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("meandataType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeandataType
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public MeandataTypeType Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("period")]
        public float Period { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Period property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeriodSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("freq")]
        public float Freq { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Freq property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreqSpecified { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("file")]
        public string File { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("begin")]
        public float Begin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Begin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BeginSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("end")]
        public float End { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the End property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("maxTraveltime")]
        public float MaxTraveltime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxTraveltime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxTraveltimeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("excludeEmpty")]
        public MeandataTypeExcludeEmpty ExcludeEmpty { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ExcludeEmpty property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcludeEmptySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("withInternal")]
        public NetFile.BoolType WithInternal { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WithInternal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WithInternalSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("trackVehicles")]
        public NetFile.BoolType TrackVehicles { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TrackVehicles property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrackVehiclesSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("detectPersons")]
        public string DetectPersons { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vTypes")]
        public string VTypes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("writeAttributes")]
        public string WriteAttributes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("edges")]
        public string Edges { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("edgesFile")]
        public string EdgesFile { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("aggregate")]
        public NetFile.BoolType Aggregate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Aggregate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AggregateSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("minSamples")]
        public float MinSamples { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinSamples property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinSamplesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("speedThreshold")]
        public string SpeedThreshold { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MeandataTypeType", Namespace="", AnonymousType=true)]
    public enum MeandataTypeType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("emissions")]
        Emissions,
        
        [System.Xml.Serialization.XmlEnumAttribute("hbefa")]
        Hbefa,
        
        [System.Xml.Serialization.XmlEnumAttribute("harmonoise")]
        Harmonoise,
        
        [System.Xml.Serialization.XmlEnumAttribute("amitran")]
        Amitran,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MeandataTypeExcludeEmpty", Namespace="", AnonymousType=true)]
    public enum MeandataTypeExcludeEmpty
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("true")]
        True,
        
        [System.Xml.Serialization.XmlEnumAttribute("false")]
        False,
        
        [System.Xml.Serialization.XmlEnumAttribute("True")]
        True1,
        
        [System.Xml.Serialization.XmlEnumAttribute("False")]
        False1,
        
        [System.Xml.Serialization.XmlEnumAttribute("yes")]
        Yes,
        
        [System.Xml.Serialization.XmlEnumAttribute("no")]
        No,
        
        [System.Xml.Serialization.XmlEnumAttribute("on")]
        On,
        
        [System.Xml.Serialization.XmlEnumAttribute("off")]
        Off,
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        [System.Xml.Serialization.XmlEnumAttribute("x")]
        X,
        
        [System.Xml.Serialization.XmlEnumAttribute("-")]
        Empty,
        
        [System.Xml.Serialization.XmlEnumAttribute("defaults")]
        Defaults,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("timedEventType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimedEventType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public TimedEventTypeType Type { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("source")]
        public string Source { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("dest")]
        public string Dest { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("saveDetectors")]
        public NetFile.BoolType SaveDetectors { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SaveDetectors property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SaveDetectorsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("saveConditions")]
        public NetFile.BoolType SaveConditions { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SaveConditions property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SaveConditionsSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TimedEventTypeType", Namespace="", AnonymousType=true)]
    public enum TimedEventTypeType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("SaveTLSProgram")]
        SaveTlsProgram,
        
        [System.Xml.Serialization.XmlEnumAttribute("SaveTLSStates")]
        SaveTlsStates,
        
        [System.Xml.Serialization.XmlEnumAttribute("SaveTLSSwitchTimes")]
        SaveTlsSwitchTimes,
        
        [System.Xml.Serialization.XmlEnumAttribute("SaveTLSSwitchStates")]
        SaveTlsSwitchStates,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tlLogicAdditionalType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TlLogicAdditionalType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.PhaseType> _phase;
        
        [System.Xml.Serialization.XmlElementAttribute("phase")]
        public System.Collections.ObjectModel.Collection<NetFile.PhaseType> Phase
        {
            get
            {
                return _phase;
            }
            private set
            {
                _phase = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Phase collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhaseSpecified
        {
            get
            {
                return (this.Phase.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TlLogicAdditionalType" /> class.</para>
        /// </summary>
        public TlLogicAdditionalType()
        {
            this._phase = new System.Collections.ObjectModel.Collection<NetFile.PhaseType>();
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
            this._condition = new System.Collections.ObjectModel.Collection<NetFile.ConditionType>();
            this._assignment = new System.Collections.ObjectModel.Collection<NetFile.AssignmentType>();
            this._function = new System.Collections.ObjectModel.Collection<NetFile.FunctionType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ConditionType> _condition;
        
        [System.Xml.Serialization.XmlElementAttribute("condition")]
        public System.Collections.ObjectModel.Collection<NetFile.ConditionType> Condition
        {
            get
            {
                return _condition;
            }
            private set
            {
                _condition = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Condition collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified
        {
            get
            {
                return (this.Condition.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.AssignmentType> _assignment;
        
        [System.Xml.Serialization.XmlElementAttribute("assignment")]
        public System.Collections.ObjectModel.Collection<NetFile.AssignmentType> Assignment
        {
            get
            {
                return _assignment;
            }
            private set
            {
                _assignment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Assignment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssignmentSpecified
        {
            get
            {
                return (this.Assignment.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.FunctionType> _function;
        
        [System.Xml.Serialization.XmlElementAttribute("function")]
        public System.Collections.ObjectModel.Collection<NetFile.FunctionType> Function
        {
            get
            {
                return _function;
            }
            private set
            {
                _function = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Function collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FunctionSpecified
        {
            get
            {
                return (this.Function.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public NetFile.TlTypeType Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("programID")]
        public string ProgramId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("offset")]
        public string Offset { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WAUTType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WautType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<WautSwitchType> _wautSwitch;
        
        [System.Xml.Serialization.XmlElementAttribute("wautSwitch")]
        public System.Collections.ObjectModel.Collection<WautSwitchType> WautSwitch
        {
            get
            {
                return _wautSwitch;
            }
            private set
            {
                _wautSwitch = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the WautSwitch collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WautSwitchSpecified
        {
            get
            {
                return (this.WautSwitch.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="WautType" /> class.</para>
        /// </summary>
        public WautType()
        {
            this._wautSwitch = new System.Collections.ObjectModel.Collection<WautSwitchType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("refTime")]
        public string RefTime { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("startProg")]
        public string StartProg { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("period")]
        public string Period { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("wautSwitchType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WautSwitchType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("time")]
        public string Time { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("to")]
        public string To { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("wautJunctionType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WautJunctionType
    {
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("wautID")]
        public string WautId { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("junctionID")]
        public string JunctionId { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("procedure")]
        public string Procedure { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("synchron")]
        public string Synchron { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("variableSpeedSignType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VariableSpeedSignType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="VariableSpeedSignType" /> class.</para>
        /// </summary>
        public VariableSpeedSignType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
            this._step = new System.Collections.ObjectModel.Collection<VariableSpeedSignTypeStep>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<VariableSpeedSignTypeStep> _step;
        
        [System.Xml.Serialization.XmlElementAttribute("step")]
        public System.Collections.ObjectModel.Collection<VariableSpeedSignTypeStep> Step
        {
            get
            {
                return _step;
            }
            private set
            {
                _step = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Step collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StepSpecified
        {
            get
            {
                return (this.Step.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("lanes")]
        public string Lanes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("file")]
        public string File { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("pos")]
        public string Pos { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vTypes")]
        public string VTypes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("VariableSpeedSignTypeStep", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VariableSpeedSignTypeStep
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("time")]
        public float Time { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("speed")]
        public string Speed { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("routeProbeType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RouteProbeType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RouteProbeType" /> class.</para>
        /// </summary>
        public RouteProbeType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("edge")]
        public string Edge { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("begin")]
        public float Begin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Begin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BeginSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("period")]
        public float Period { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Period property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeriodSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("freq")]
        public float Freq { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Freq property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreqSpecified { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("file")]
        public string File { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vTypes")]
        public string VTypes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("rerouterType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RerouterType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.IncludeType> _include;
        
        [System.Xml.Serialization.XmlElementAttribute("include")]
        public System.Collections.ObjectModel.Collection<NetFile.IncludeType> Include
        {
            get
            {
                return _include;
            }
            private set
            {
                _include = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Include collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncludeSpecified
        {
            get
            {
                return (this.Include.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RerouterType" /> class.</para>
        /// </summary>
        public RerouterType()
        {
            this._include = new System.Collections.ObjectModel.Collection<NetFile.IncludeType>();
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
            this._interval = new System.Collections.ObjectModel.Collection<RerouterTypeInterval>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RerouterTypeInterval> _interval;
        
        [System.Xml.Serialization.XmlElementAttribute("interval")]
        public System.Collections.ObjectModel.Collection<RerouterTypeInterval> Interval
        {
            get
            {
                return _interval;
            }
            private set
            {
                _interval = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Interval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalSpecified
        {
            get
            {
                return (this.Interval.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("edges")]
        public string Edges { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("probability")]
        public float Probability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Probability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbabilitySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vTypes")]
        public string VTypes { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("timeThreshold")]
        public float TimeThreshold { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TimeThreshold property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeThresholdSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("pos")]
        public string Pos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("radius")]
        public float Radius { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Radius property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RadiusSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("visible")]
        public NetFile.BoolType Visible { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Visible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibleSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("off")]
        public NetFile.BoolType Off { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Off property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("optional")]
        public NetFile.BoolType Optional { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Optional property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OptionalSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RerouterTypeInterval", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RerouterTypeInterval
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RerouterTypeIntervalClosingReroute> _closingReroute;
        
        [System.Xml.Serialization.XmlElementAttribute("closingReroute")]
        public System.Collections.ObjectModel.Collection<RerouterTypeIntervalClosingReroute> ClosingReroute
        {
            get
            {
                return _closingReroute;
            }
            private set
            {
                _closingReroute = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ClosingReroute collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClosingRerouteSpecified
        {
            get
            {
                return (this.ClosingReroute.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RerouterTypeInterval" /> class.</para>
        /// </summary>
        public RerouterTypeInterval()
        {
            this._closingReroute = new System.Collections.ObjectModel.Collection<RerouterTypeIntervalClosingReroute>();
            this._closingLaneReroute = new System.Collections.ObjectModel.Collection<RerouterTypeIntervalClosingLaneReroute>();
            this._destProbReroute = new System.Collections.ObjectModel.Collection<RerouterTypeIntervalDestProbReroute>();
            this._routeProbReroute = new System.Collections.ObjectModel.Collection<RerouterTypeIntervalRouteProbReroute>();
            this._parkingAreaReroute = new System.Collections.ObjectModel.Collection<RerouterTypeIntervalParkingAreaReroute>();
            this._viaProbReroute = new System.Collections.ObjectModel.Collection<RerouterTypeIntervalViaProbReroute>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RerouterTypeIntervalClosingLaneReroute> _closingLaneReroute;
        
        [System.Xml.Serialization.XmlElementAttribute("closingLaneReroute")]
        public System.Collections.ObjectModel.Collection<RerouterTypeIntervalClosingLaneReroute> ClosingLaneReroute
        {
            get
            {
                return _closingLaneReroute;
            }
            private set
            {
                _closingLaneReroute = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ClosingLaneReroute collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClosingLaneRerouteSpecified
        {
            get
            {
                return (this.ClosingLaneReroute.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RerouterTypeIntervalDestProbReroute> _destProbReroute;
        
        [System.Xml.Serialization.XmlElementAttribute("destProbReroute")]
        public System.Collections.ObjectModel.Collection<RerouterTypeIntervalDestProbReroute> DestProbReroute
        {
            get
            {
                return _destProbReroute;
            }
            private set
            {
                _destProbReroute = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DestProbReroute collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DestProbRerouteSpecified
        {
            get
            {
                return (this.DestProbReroute.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RerouterTypeIntervalRouteProbReroute> _routeProbReroute;
        
        [System.Xml.Serialization.XmlElementAttribute("routeProbReroute")]
        public System.Collections.ObjectModel.Collection<RerouterTypeIntervalRouteProbReroute> RouteProbReroute
        {
            get
            {
                return _routeProbReroute;
            }
            private set
            {
                _routeProbReroute = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RouteProbReroute collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteProbRerouteSpecified
        {
            get
            {
                return (this.RouteProbReroute.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RerouterTypeIntervalParkingAreaReroute> _parkingAreaReroute;
        
        [System.Xml.Serialization.XmlElementAttribute("parkingAreaReroute")]
        public System.Collections.ObjectModel.Collection<RerouterTypeIntervalParkingAreaReroute> ParkingAreaReroute
        {
            get
            {
                return _parkingAreaReroute;
            }
            private set
            {
                _parkingAreaReroute = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ParkingAreaReroute collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingAreaRerouteSpecified
        {
            get
            {
                return (this.ParkingAreaReroute.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RerouterTypeIntervalViaProbReroute> _viaProbReroute;
        
        [System.Xml.Serialization.XmlElementAttribute("viaProbReroute")]
        public System.Collections.ObjectModel.Collection<RerouterTypeIntervalViaProbReroute> ViaProbReroute
        {
            get
            {
                return _viaProbReroute;
            }
            private set
            {
                _viaProbReroute = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ViaProbReroute collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ViaProbRerouteSpecified
        {
            get
            {
                return (this.ViaProbReroute.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("begin")]
        public string Begin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("end")]
        public string End { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RerouterTypeIntervalClosingReroute", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RerouterTypeIntervalClosingReroute
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("allow")]
        public string Allow { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("disallow")]
        public string Disallow { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RerouterTypeIntervalClosingLaneReroute", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RerouterTypeIntervalClosingLaneReroute
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("allow")]
        public string Allow { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("disallow")]
        public string Disallow { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RerouterTypeIntervalDestProbReroute", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RerouterTypeIntervalDestProbReroute
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("probability")]
        public float Probability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Probability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbabilitySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RerouterTypeIntervalRouteProbReroute", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RerouterTypeIntervalRouteProbReroute
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("probability")]
        public float Probability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Probability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbabilitySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RerouterTypeIntervalParkingAreaReroute", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RerouterTypeIntervalParkingAreaReroute
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("probability")]
        public float Probability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Probability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbabilitySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("visible")]
        public NetFile.BoolType Visible { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Visible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibleSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RerouterTypeIntervalViaProbReroute", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RerouterTypeIntervalViaProbReroute
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("probability")]
        public float Probability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Probability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbabilitySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("instantInductionLoopType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstantInductionLoopType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="InstantInductionLoopType" /> class.</para>
        /// </summary>
        public InstantInductionLoopType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^\t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^\\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("lane")]
        public string Lane { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("pos")]
        public string Pos { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("file")]
        public string File { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("friendlyPos")]
        public NetFile.BoolType FriendlyPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FriendlyPos property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FriendlyPosSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vTypes")]
        public string VTypes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("nextEdges")]
        public string NextEdges { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("detectPersons")]
        public string DetectPersons { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("busStopType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BusStopType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BusStopType" /> class.</para>
        /// </summary>
        public BusStopType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
            this._access = new System.Collections.ObjectModel.Collection<AccessType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AccessType> _access;
        
        [System.Xml.Serialization.XmlElementAttribute("access")]
        public System.Collections.ObjectModel.Collection<AccessType> Access
        {
            get
            {
                return _access;
            }
            private set
            {
                _access = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Access collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccessSpecified
        {
            get
            {
                return (this.Access.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: ((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?)")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("lane")]
        public string Lane { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("startPos")]
        public string StartPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("endPos")]
        public string EndPos { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("friendlyPos")]
        public NetFile.BoolType FriendlyPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FriendlyPos property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FriendlyPosSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lines")]
        public string Lines { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("personCapacity")]
        public int PersonCapacity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PersonCapacity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PersonCapacitySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("parkingLength")]
        public float ParkingLength { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingLength property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingLengthSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("accessType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccessType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AccessType" /> class.</para>
        /// </summary>
        public AccessType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("lane")]
        public string Lane { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("pos")]
        public string Pos { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("friendlyPos")]
        public NetFile.BoolType FriendlyPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FriendlyPos property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FriendlyPosSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public float Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Length property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("containerStopType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContainerStopType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ContainerStopType" /> class.</para>
        /// </summary>
        public ContainerStopType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: ((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?)")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("lane")]
        public string Lane { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("startPos")]
        public string StartPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("endPos")]
        public string EndPos { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("friendlyPos")]
        public NetFile.BoolType FriendlyPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FriendlyPos property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FriendlyPosSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lines")]
        public string Lines { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("containerCapacity")]
        public int ContainerCapacity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ContainerCapacity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContainerCapacitySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("parkingLength")]
        public float ParkingLength { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingLength property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingLengthSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("chargingStationType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargingStationType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ChargingStationType" /> class.</para>
        /// </summary>
        public ChargingStationType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("lane")]
        public string Lane { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("startPos")]
        public string StartPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("endPos")]
        public string EndPos { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("friendlyPos")]
        public NetFile.BoolType FriendlyPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FriendlyPos property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FriendlyPosSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lines")]
        public string Lines { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("power")]
        public string Power { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("efficiency")]
        public string Efficiency { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("chargeInTransit")]
        public NetFile.BoolType ChargeInTransit { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeInTransit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChargeInTransitSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("chargeDelay")]
        public string ChargeDelay { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("chargeType")]
        public ChargingStationTypeChargeType ChargeType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ChargeType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChargeTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("waitingTime")]
        public float WaitingTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WaitingTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WaitingTimeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parkingArea")]
        public string ParkingArea { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ChargingStationTypeChargeType", Namespace="", AnonymousType=true)]
    public enum ChargingStationTypeChargeType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("normal")]
        Normal,
        
        [System.Xml.Serialization.XmlEnumAttribute("battery-exchange")]
        BatteryExchange,
        
        [System.Xml.Serialization.XmlEnumAttribute("fuel")]
        Fuel,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("overheadWireSegmentType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OverheadWireSegmentType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OverheadWireSegmentType" /> class.</para>
        /// </summary>
        public OverheadWireSegmentType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("lane")]
        public string Lane { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("voltageSource")]
        public NetFile.BoolType VoltageSource { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the VoltageSource property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VoltageSourceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("startPos")]
        public string StartPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("endPos")]
        public string EndPos { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("friendlyPos")]
        public NetFile.BoolType FriendlyPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FriendlyPos property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FriendlyPosSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tractionSubstationType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TractionSubstationType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TractionSubstationType" /> class.</para>
        /// </summary>
        public TractionSubstationType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("voltage")]
        public string Voltage { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("currentLimit")]
        public string CurrentLimit { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("pos")]
        public string Pos { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("overheadWireClampType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OverheadWireClampType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OverheadWireClampType" /> class.</para>
        /// </summary>
        public OverheadWireClampType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("substationId")]
        public string SubstationId { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("idSegmentStartClamp")]
        public string IdSegmentStartClamp { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("idSegmentEndClamp")]
        public string IdSegmentEndClamp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("overheadWireType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OverheadWireType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OverheadWireType" /> class.</para>
        /// </summary>
        public OverheadWireType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("segments")]
        public string Segments { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("substationId")]
        public string SubstationId { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("clamps")]
        public string Clamps { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("forbiddenInnerLanes")]
        public string ForbiddenInnerLanes { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("parkingAreaType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParkingAreaType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ParkingAreaType" /> class.</para>
        /// </summary>
        public ParkingAreaType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
            this._space = new System.Collections.ObjectModel.Collection<ParkingSpaceType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ParkingSpaceType> _space;
        
        [System.Xml.Serialization.XmlElementAttribute("space")]
        public System.Collections.ObjectModel.Collection<ParkingSpaceType> Space
        {
            get
            {
                return _space;
            }
            private set
            {
                _space = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Space collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpaceSpecified
        {
            get
            {
                return (this.Space.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("lane")]
        public string Lane { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("roadsideCapacity")]
        public int RoadsideCapacity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RoadsideCapacity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoadsideCapacitySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("onRoad")]
        public NetFile.BoolType OnRoad { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OnRoad property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnRoadSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("startPos")]
        public string StartPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("endPos")]
        public string EndPos { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("friendlyPos")]
        public NetFile.BoolType FriendlyPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FriendlyPos property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FriendlyPosSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lines")]
        public string Lines { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public float Width { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Width property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public float Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Length property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("angle")]
        public string Angle { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("departPos")]
        public string DepartPos { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lefthand")]
        public NetFile.BoolType Lefthand { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lefthand property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LefthandSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("acceptedBadges")]
        public string AcceptedBadges { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("parkingSpaceType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParkingSpaceType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ParkingSpaceType" /> class.</para>
        /// </summary>
        public ParkingSpaceType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public string X { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public string Y { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("z")]
        public string Z { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public float Width { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Width property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public float Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Length property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("angle")]
        public string Angle { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("slope")]
        public string Slope { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("calibratorType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalibratorType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.IncludeType> _include;
        
        [System.Xml.Serialization.XmlElementAttribute("include")]
        public System.Collections.ObjectModel.Collection<NetFile.IncludeType> Include
        {
            get
            {
                return _include;
            }
            private set
            {
                _include = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Include collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncludeSpecified
        {
            get
            {
                return (this.Include.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CalibratorType" /> class.</para>
        /// </summary>
        public CalibratorType()
        {
            this._include = new System.Collections.ObjectModel.Collection<NetFile.IncludeType>();
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
            this._route = new System.Collections.ObjectModel.Collection<NetFile.RouteType>();
            this._flow = new System.Collections.ObjectModel.Collection<NetFile.FlowCalibratorType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.RouteType> _route;
        
        [System.Xml.Serialization.XmlElementAttribute("route")]
        public System.Collections.ObjectModel.Collection<NetFile.RouteType> Route
        {
            get
            {
                return _route;
            }
            private set
            {
                _route = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Route collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteSpecified
        {
            get
            {
                return (this.Route.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.FlowCalibratorType> _flow;
        
        [System.Xml.Serialization.XmlElementAttribute("flow")]
        public System.Collections.ObjectModel.Collection<NetFile.FlowCalibratorType> Flow
        {
            get
            {
                return _flow;
            }
            private set
            {
                _flow = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Flow collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlowSpecified
        {
            get
            {
                return (this.Flow.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^\t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^\\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("edge")]
        public string Edge { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lane")]
        public string Lane { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("node")]
        public string Node { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("pos")]
        public string Pos { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("friendlyPos")]
        public NetFile.BoolType FriendlyPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FriendlyPos property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FriendlyPosSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("local")]
        public NetFile.BoolType Local { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Local property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LocalSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("period")]
        public float Period { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Period property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PeriodSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("freq")]
        public float Freq { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Freq property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreqSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("file")]
        public string File { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("output")]
        public string Output { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("routeProbe")]
        public string RouteProbe { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("jamThreshold")]
        public string JamThreshold { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vTypes")]
        public string VTypes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("vaporizerType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VaporizerType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="VaporizerType" /> class.</para>
        /// </summary>
        public VaporizerType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("begin")]
        public float Begin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Begin property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BeginSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("end")]
        public float End { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the End property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("railSignalConstraintsType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RailSignalConstraintsType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConstraintType> _predecessor;
        
        [System.Xml.Serialization.XmlElementAttribute("predecessor")]
        public System.Collections.ObjectModel.Collection<ConstraintType> Predecessor
        {
            get
            {
                return _predecessor;
            }
            private set
            {
                _predecessor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Predecessor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PredecessorSpecified
        {
            get
            {
                return (this.Predecessor.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RailSignalConstraintsType" /> class.</para>
        /// </summary>
        public RailSignalConstraintsType()
        {
            this._predecessor = new System.Collections.ObjectModel.Collection<ConstraintType>();
            this._insertionPredecessor = new System.Collections.ObjectModel.Collection<ConstraintType>();
            this._foeInsertion = new System.Collections.ObjectModel.Collection<ConstraintType>();
            this._insertionOrder = new System.Collections.ObjectModel.Collection<ConstraintType>();
            this._bidiPredecessor = new System.Collections.ObjectModel.Collection<ConstraintType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConstraintType> _insertionPredecessor;
        
        [System.Xml.Serialization.XmlElementAttribute("insertionPredecessor")]
        public System.Collections.ObjectModel.Collection<ConstraintType> InsertionPredecessor
        {
            get
            {
                return _insertionPredecessor;
            }
            private set
            {
                _insertionPredecessor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InsertionPredecessor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InsertionPredecessorSpecified
        {
            get
            {
                return (this.InsertionPredecessor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConstraintType> _foeInsertion;
        
        [System.Xml.Serialization.XmlElementAttribute("foeInsertion")]
        public System.Collections.ObjectModel.Collection<ConstraintType> FoeInsertion
        {
            get
            {
                return _foeInsertion;
            }
            private set
            {
                _foeInsertion = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the FoeInsertion collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FoeInsertionSpecified
        {
            get
            {
                return (this.FoeInsertion.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConstraintType> _insertionOrder;
        
        [System.Xml.Serialization.XmlElementAttribute("insertionOrder")]
        public System.Collections.ObjectModel.Collection<ConstraintType> InsertionOrder
        {
            get
            {
                return _insertionOrder;
            }
            private set
            {
                _insertionOrder = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the InsertionOrder collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InsertionOrderSpecified
        {
            get
            {
                return (this.InsertionOrder.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ConstraintType> _bidiPredecessor;
        
        [System.Xml.Serialization.XmlElementAttribute("bidiPredecessor")]
        public System.Collections.ObjectModel.Collection<ConstraintType> BidiPredecessor
        {
            get
            {
                return _bidiPredecessor;
            }
            private set
            {
                _bidiPredecessor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the BidiPredecessor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BidiPredecessorSpecified
        {
            get
            {
                return (this.BidiPredecessor.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("constraintType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConstraintType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ConstraintType" /> class.</para>
        /// </summary>
        public ConstraintType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("tripId")]
        public string TripId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("tl")]
        public string Tl { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("foes")]
        public string Foes { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("limit")]
        public int Limit { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Limit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LimitSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("active")]
        public NetFile.BoolType Active { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Active property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActiveSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("deadlockType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeadlockType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF):[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)(:[-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF))?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([" +
            //|Inf|inf|INF):[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)" +
            //(\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF))?"))]
        [System.Xml.Serialization.XmlAttributeAttribute("time")]
        public string Time { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("vehicles")]
        public string Vehicles { get; set; }
        
        //
        [System.Xml.Serialization.XmlAttributeAttribute("signals")]
        public string Signals { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("polygonType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PolygonType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PolygonType" /> class.</para>
        /// </summary>
        public PolygonType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: ((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?)")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fill")]
        public NetFile.BoolType Fill { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FillSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("geo")]
        public NetFile.BoolType Geo { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Geo property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GeoSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("layer")]
        public string Layer { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: (                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                 [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 (,                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                 )?                 (                   \s                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF),                   [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   (,                     [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF)                   )?                 )*               )?")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("shape")]
        public string Shape { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("angle")]
        public string Angle { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lineWidth")]
        public string LineWidth { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("imgFile")]
        public string ImgFile { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("poiType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PoiType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PoiType" /> class.</para>
        /// </summary>
        public PoiType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("icon")]
        public PoiTypeIcon Icon { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Icon property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("type")]
        public string Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: ((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"((0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*)),                              (0|(0?\.(\d+))|(1|1\.0*))                              (,(0|(0?\.(\d+))|(1|1\.0*)))?)|((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),                              (\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])                              (,(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))?)|(#[0-9a-fA-F]{6}([0-9a-fA-F]{2})?)")]
        [System.Xml.Serialization.XmlAttributeAttribute("color")]
        public string Color { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("layer")]
        public string Layer { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public string X { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public string Y { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lon")]
        public string Lon { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("lat")]
        public string Lat { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("lane")]
        public string Lane { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("pos")]
        public string Pos { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("friendlyPos")]
        public NetFile.BoolType FriendlyPos { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FriendlyPos property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FriendlyPosSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("posLat")]
        public string PosLat { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("angle")]
        public string Angle { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("imgFile")]
        public string ImgFile { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public string Width { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [-+]?((\d+\.?|(\d*\.\d+))([eE][-+]?\d+)?|Inf|inf|INF).</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[-+]?((\\d+\\.?|(\\d*\\.\\d+))([eE][-+]?\\d+)?|Inf|inf|INF)")]
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public string Height { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PoiTypeIcon", Namespace="", AnonymousType=true)]
    public enum PoiTypeIcon
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("")]
        Empty,
        
        [System.Xml.Serialization.XmlEnumAttribute("pin")]
        Pin,
        
        [System.Xml.Serialization.XmlEnumAttribute("tree")]
        Tree,
        
        [System.Xml.Serialization.XmlEnumAttribute("hotel")]
        Hotel,
        
        [System.Xml.Serialization.XmlEnumAttribute("fuel")]
        Fuel,
        
        [System.Xml.Serialization.XmlEnumAttribute("charging_station")]
        ChargingStation,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("rerouterValuesType", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("rerouterValue", Namespace="")]
    public partial class RerouterValuesType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<NetFile.ParamType> _param;
        
        [System.Xml.Serialization.XmlElementAttribute("param")]
        public System.Collections.ObjectModel.Collection<NetFile.ParamType> Param
        {
            get
            {
                return _param;
            }
            private set
            {
                _param = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Param collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParamSpecified
        {
            get
            {
                return (this.Param.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RerouterValuesType" /> class.</para>
        /// </summary>
        public RerouterValuesType()
        {
            this._param = new System.Collections.ObjectModel.Collection<NetFile.ParamType>();
            this._interval = new System.Collections.ObjectModel.Collection<RerouterValuesTypeInterval>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RerouterValuesTypeInterval> _interval;
        
        [System.Xml.Serialization.XmlElementAttribute("interval")]
        public System.Collections.ObjectModel.Collection<RerouterValuesTypeInterval> Interval
        {
            get
            {
                return _interval;
            }
            private set
            {
                _interval = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Interval collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntervalSpecified
        {
            get
            {
                return (this.Interval.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RerouterValuesTypeInterval", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RerouterValuesTypeInterval
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalClosingReroute> _closingReroute;
        
        [System.Xml.Serialization.XmlElementAttribute("closingReroute")]
        public System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalClosingReroute> ClosingReroute
        {
            get
            {
                return _closingReroute;
            }
            private set
            {
                _closingReroute = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ClosingReroute collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClosingRerouteSpecified
        {
            get
            {
                return (this.ClosingReroute.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RerouterValuesTypeInterval" /> class.</para>
        /// </summary>
        public RerouterValuesTypeInterval()
        {
            this._closingReroute = new System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalClosingReroute>();
            this._closingLaneReroute = new System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalClosingLaneReroute>();
            this._destProbReroute = new System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalDestProbReroute>();
            this._routeProbReroute = new System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalRouteProbReroute>();
            this._parkingAreaReroute = new System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalParkingAreaReroute>();
            this._viaProbReroute = new System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalViaProbReroute>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalClosingLaneReroute> _closingLaneReroute;
        
        [System.Xml.Serialization.XmlElementAttribute("closingLaneReroute")]
        public System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalClosingLaneReroute> ClosingLaneReroute
        {
            get
            {
                return _closingLaneReroute;
            }
            private set
            {
                _closingLaneReroute = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ClosingLaneReroute collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClosingLaneRerouteSpecified
        {
            get
            {
                return (this.ClosingLaneReroute.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalDestProbReroute> _destProbReroute;
        
        [System.Xml.Serialization.XmlElementAttribute("destProbReroute")]
        public System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalDestProbReroute> DestProbReroute
        {
            get
            {
                return _destProbReroute;
            }
            private set
            {
                _destProbReroute = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DestProbReroute collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DestProbRerouteSpecified
        {
            get
            {
                return (this.DestProbReroute.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalRouteProbReroute> _routeProbReroute;
        
        [System.Xml.Serialization.XmlElementAttribute("routeProbReroute")]
        public System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalRouteProbReroute> RouteProbReroute
        {
            get
            {
                return _routeProbReroute;
            }
            private set
            {
                _routeProbReroute = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the RouteProbReroute collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RouteProbRerouteSpecified
        {
            get
            {
                return (this.RouteProbReroute.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalParkingAreaReroute> _parkingAreaReroute;
        
        [System.Xml.Serialization.XmlElementAttribute("parkingAreaReroute")]
        public System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalParkingAreaReroute> ParkingAreaReroute
        {
            get
            {
                return _parkingAreaReroute;
            }
            private set
            {
                _parkingAreaReroute = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ParkingAreaReroute collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingAreaRerouteSpecified
        {
            get
            {
                return (this.ParkingAreaReroute.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalViaProbReroute> _viaProbReroute;
        
        [System.Xml.Serialization.XmlElementAttribute("viaProbReroute")]
        public System.Collections.ObjectModel.Collection<RerouterValuesTypeIntervalViaProbReroute> ViaProbReroute
        {
            get
            {
                return _viaProbReroute;
            }
            private set
            {
                _viaProbReroute = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ViaProbReroute collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ViaProbRerouteSpecified
        {
            get
            {
                return (this.ViaProbReroute.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("begin")]
        public float Begin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        //
        [System.Xml.Serialization.XmlAttributeAttribute("end")]
        public float End { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RerouterValuesTypeIntervalClosingReroute", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RerouterValuesTypeIntervalClosingReroute
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("allow")]
        public string Allow { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("disallow")]
        public string Disallow { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RerouterValuesTypeIntervalClosingLaneReroute", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RerouterValuesTypeIntervalClosingLaneReroute
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("allow")]
        public string Allow { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("disallow")]
        public string Disallow { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RerouterValuesTypeIntervalDestProbReroute", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RerouterValuesTypeIntervalDestProbReroute
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("probability")]
        public float Probability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Probability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbabilitySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RerouterValuesTypeIntervalRouteProbReroute", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RerouterValuesTypeIntervalRouteProbReroute
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("probability")]
        public float Probability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Probability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbabilitySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RerouterValuesTypeIntervalParkingAreaReroute", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RerouterValuesTypeIntervalParkingAreaReroute
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("probability")]
        public float Probability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Probability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbabilitySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("visible")]
        public NetFile.BoolType Visible { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Visible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibleSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1181.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RerouterValuesTypeIntervalViaProbReroute", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RerouterValuesTypeIntervalViaProbReroute
    {
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^ \t\n\r|\\;,']+.</para>
        /// </summary>
        //[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ \\t\\n\\r|\\\\;,\']+")]
        //
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("probability")]
        public float Probability { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Probability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProbabilitySpecified { get; set; }
    }
}
